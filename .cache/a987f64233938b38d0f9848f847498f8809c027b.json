{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/color-picker/src/components/hue-slider.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/color-picker/src/components/hue-slider.vue","filename":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/color-picker/src/components/hue-slider.vue","passPerPreset":false,"envName":"development","cwd":"/home/vy/Desktop/B.A.D/bad-system","root":"/home/vy/Desktop/B.A.D/bad-system","generatorOpts":{"filename":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/color-picker/src/components/hue-slider.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/color-picker/src/components/hue-slider.vue"}},"code":"var draggable;\nmodule.link(\"../draggable\", {\n  \"default\": function (v) {\n    draggable = v;\n  }\n}, 0);\nmodule.exportDefault({\n  name: 'el-color-hue-slider',\n  props: {\n    color: {\n      required: true\n    },\n    vertical: Boolean\n  },\n  data: function () {\n    return {\n      thumbLeft: 0,\n      thumbTop: 0\n    };\n  },\n  computed: {\n    hueValue: function () {\n      var hue = this.color.get('hue');\n      return hue;\n    }\n  },\n  watch: {\n    hueValue: function () {\n      this.update();\n    }\n  },\n  methods: {\n    handleClick: function (event) {\n      var thumb = this.$refs.thumb;\n      var target = event.target;\n\n      if (target !== thumb) {\n        this.handleDrag(event);\n      }\n    },\n    handleDrag: function (event) {\n      var rect = this.$el.getBoundingClientRect();\n      var thumb = this.$refs.thumb;\n      var hue;\n\n      if (!this.vertical) {\n        var left = event.clientX - rect.left;\n        left = Math.min(left, rect.width - thumb.offsetWidth / 2);\n        left = Math.max(thumb.offsetWidth / 2, left);\n        hue = Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 360);\n      } else {\n        var top = event.clientY - rect.top;\n        top = Math.min(top, rect.height - thumb.offsetHeight / 2);\n        top = Math.max(thumb.offsetHeight / 2, top);\n        hue = Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 360);\n      }\n\n      this.color.set('hue', hue);\n    },\n    getThumbLeft: function () {\n      if (this.vertical) return 0;\n      var el = this.$el;\n      var hue = this.color.get('hue');\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(hue * (el.offsetWidth - thumb.offsetWidth / 2) / 360);\n    },\n    getThumbTop: function () {\n      if (!this.vertical) return 0;\n      var el = this.$el;\n      var hue = this.color.get('hue');\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(hue * (el.offsetHeight - thumb.offsetHeight / 2) / 360);\n    },\n    update: function () {\n      this.thumbLeft = this.getThumbLeft();\n      this.thumbTop = this.getThumbTop();\n    }\n  },\n  mounted: function () {\n    var _this = this;\n\n    var _this$$refs = this.$refs,\n        bar = _this$$refs.bar,\n        thumb = _this$$refs.thumb;\n    var dragConfig = {\n      drag: function (event) {\n        _this.handleDrag(event);\n      },\n      end: function (event) {\n        _this.handleDrag(event);\n      }\n    };\n    draggable(bar, dragConfig);\n    draggable(thumb, dragConfig);\n    this.update();\n  }\n});","map":{"version":3,"sources":["/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/color-picker/src/components/hue-slider.vue"],"names":["draggable","module","link","v","exportDefault","name","props","color","required","vertical","Boolean","data","thumbLeft","thumbTop","computed","hueValue","hue","get","watch","update","methods","handleClick","event","thumb","$refs","target","handleDrag","rect","$el","getBoundingClientRect","left","clientX","Math","min","width","offsetWidth","max","round","top","clientY","height","offsetHeight","set","getThumbLeft","el","getThumbTop","mounted","bar","dragConfig","drag","end"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import draggable from '../draggable';\n\n  export default {\n    name: 'el-color-hue-slider',\n\n    props: {\n      color: {\n        required: true\n      },\n\n      vertical: Boolean\n    },\n\n    data() {\n      return {\n        thumbLeft: 0,\n        thumbTop: 0\n      };\n    },\n\n    computed: {\n      hueValue() {\n        const hue = this.color.get('hue');\n        return hue;\n      }\n    },\n\n    watch: {\n      hueValue() {\n        this.update();\n      }\n    },\n\n    methods: {\n      handleClick(event) {\n        const thumb = this.$refs.thumb;\n        const target = event.target;\n\n        if (target !== thumb) {\n          this.handleDrag(event);\n        }\n      },\n\n      handleDrag(event) {\n        const rect = this.$el.getBoundingClientRect();\n        const { thumb } = this.$refs;\n        let hue;\n\n        if (!this.vertical) {\n          let left = event.clientX - rect.left;\n          left = Math.min(left, rect.width - thumb.offsetWidth / 2);\n          left = Math.max(thumb.offsetWidth / 2, left);\n\n          hue = Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 360);\n        } else {\n          let top = event.clientY - rect.top;\n          top = Math.min(top, rect.height - thumb.offsetHeight / 2);\n          top = Math.max(thumb.offsetHeight / 2, top);\n\n          hue = Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 360);\n        }\n\n        this.color.set('hue', hue);\n      },\n\n      getThumbLeft() {\n        if (this.vertical) return 0;\n        const el = this.$el;\n        const hue = this.color.get('hue');\n\n        if (!el) return 0;\n        const thumb = this.$refs.thumb;\n        return Math.round(hue * (el.offsetWidth - thumb.offsetWidth / 2) / 360);\n      },\n\n      getThumbTop() {\n        if (!this.vertical) return 0;\n        const el = this.$el;\n        const hue = this.color.get('hue');\n\n        if (!el) return 0;\n        const thumb = this.$refs.thumb;\n        return Math.round(hue * (el.offsetHeight - thumb.offsetHeight / 2) / 360);\n      },\n\n      update() {\n        this.thumbLeft = this.getThumbLeft();\n        this.thumbTop = this.getThumbTop();\n      }\n    },\n\n    mounted() {\n      const { bar, thumb } = this.$refs;\n\n      const dragConfig = {\n        drag: (event) => {\n          this.handleDrag(event);\n        },\n        end: (event) => {\n          this.handleDrag(event);\n        }\n      };\n\n      draggable(bar, dragConfig);\n      draggable(thumb, dragConfig);\n      this.update();\n    }\n  };\n"]},"sourceType":"script","hash":"a987f64233938b38d0f9848f847498f8809c027b"}
