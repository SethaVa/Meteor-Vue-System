{"metadata":{},"options":{"plugins":[{"key":"/Users/rabbit/Desktop/app/bad-system/node_modules/babel-plugin-transform-vue-jsx/index.js","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterUpdate.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterUpdate.vue","filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterUpdate.vue","passPerPreset":false,"envName":"development","cwd":"/Users/rabbit/Desktop/app/bad-system","root":"/Users/rabbit/Desktop/app/bad-system","generatorOpts":{"filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterUpdate.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterUpdate.vue"}},"code":"var Notify;\nmodule.link(\"/imports/client/lib/notify\", {\n  \"default\": function (v) {\n    Notify = v;\n  }\n}, 0);\nvar Msg;\nmodule.link(\"/imports/client/lib/message\", {\n  \"default\": function (v) {\n    Msg = v;\n  }\n}, 1);\nvar wrapCurrentTime;\nmodule.link(\"/imports/client/lib/wrap-current-time\", {\n  \"default\": function (v) {\n    wrapCurrentTime = v;\n  }\n}, 2);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 3);\nvar Lookup;\nmodule.link(\"/imports/client/lib/Lookup-Value\", {\n  \"default\": function (v) {\n    Lookup = v;\n  }\n}, 4);\nvar getNextRef;\nmodule.link(\"/imports/utils/get-next-ref\", {\n  getNextRef: function (v) {\n    getNextRef = v;\n  }\n}, 5);\nvar lookupClass, lookupStudent;\nmodule.link(\"/imports/utils/lookup-methods\", {\n  lookupClass: function (v) {\n    lookupClass = v;\n  },\n  lookupStudent: function (v) {\n    lookupStudent = v;\n  }\n}, 6);\nvar updatePayementForNew, findOnePaymentByCode;\nmodule.link(\"/imports/modules/school/api/payment/methods\", {\n  updatePayementForNew: function (v) {\n    updatePayementForNew = v;\n  },\n  findOnePaymentByCode: function (v) {\n    findOnePaymentByCode = v;\n  }\n}, 7);\nvar findExchanges;\nmodule.link(\"/imports/api/exchanges/methods.js\", {\n  findExchanges: function (v) {\n    findExchanges = v;\n  }\n}, 8);\n\nvar numeral = require('numeral');\n\nmodule.exportDefault({\n  // name: 'RegisterUpdate',\n  props: {\n    visible: {\n      type: Boolean,\n      \"default\": false\n    },\n    updateDoc: {\n      type: Object,\n      \"default\": null\n    }\n  },\n  data: function () {\n    // Check Code\n    var validateCode = function (rule, value, callback) {\n      if (!value) {\n        return callback(new Error('Code is requiered'));\n      }\n\n      setTimeout(function () {\n        var selector = {\n          receiptCode: value // _id:{$ne:this.form._id}\n\n        };\n        findOnePaymentByCode.callPromise({\n          selector: selector\n        }).then(function (result) {\n          if (result) {\n            callback(new Error('This code is exist'));\n          } else {\n            callback();\n          }\n        }).catch(function (error) {\n          Notify.error({\n            message: error\n          });\n        });\n      }, 1000);\n    };\n\n    return {\n      loading: false,\n      refNumLoading: 'eg. 1',\n      typeOpts: Lookup.type,\n      classIdOpts: [],\n      genderOpts: Lookup.gender,\n      studentIdOpts: [],\n      remaining: 0,\n      exchangeRate: 0,\n      type: '',\n      // form: this.updateDoc,\n      form: {},\n      rules: {\n        receiptCode: [{\n          validator: validateCode,\n          trigger: 'change'\n        }],\n        rsDate: [{\n          required: true,\n          message: 'Date is Required',\n          trigger: 'change'\n        }],\n        type: [{\n          required: true,\n          message: 'Type is Required',\n          trigger: 'change'\n        }],\n        fee: [{\n          required: true,\n          message: 'Fee is Required',\n          trigger: 'blure'\n        }],\n        classId: [{\n          required: true,\n          message: 'Class is Required',\n          trigger: 'change'\n        }],\n        studentId: [{\n          required: true,\n          message: 'Student ID is required',\n          trigger: 'change'\n        }],\n        payDate: [{\n          required: true,\n          message: 'Date is Required',\n          trigger: 'change'\n        }],\n        duration: [{\n          required: true,\n          message: 'Duration is required'\n        }, {\n          type: 'number',\n          message: 'Duration must be a number'\n        }],\n        usd: [{\n          required: true,\n          message: 'Total is required'\n        }],\n        khr: [{\n          required: true,\n          message: 'Total is required'\n        }],\n        totalPay: [{\n          required: true,\n          message: 'Total must be a number'\n        }]\n      }\n    };\n  },\n  watch: {\n    'form.duration': function (val) {\n      this.form.totalPay = val * this.form.fee;\n    }\n  },\n  mounted: function () {\n    // this.getExchangeRate()\n    // this.handleTypeChange(this.form.type)\n    console.log(this.$route.params.id);\n  },\n  methods: {\n    getNextRefNum: function () {\n      var _this = this;\n\n      this.refNumLoading = 'Loading....';\n      getNextRef.callPromise({\n        collectionName: 'payment',\n        opts: {\n          field: 'receiptCode',\n          // selector: {},\n          paddingType: 'start',\n          paddingLength: 5,\n          paddingChar: '0',\n          prefix: ''\n        }\n      }).then(function (result) {\n        if (result) {\n          _this.form.receiptCode = result;\n        }\n      }).catch(function (error) {\n        _this.refNumLoading = 'eg. 1';\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    handleTypeChange: function (val) {\n      var _this2 = this;\n\n      if (val) {\n        var selector = {\n          type: val,\n          status: 'Active'\n        };\n        lookupClass.callPromise({\n          selector: selector\n        }).then(function (result) {\n          _this2.classIdOpts = result;\n        }).catch(function (error) {\n          Notify.error({\n            message: error\n          });\n        });\n        this.type = val;\n        this.getStudentData(val);\n      } else {\n        this.form.classId = '';\n        this.classIdOpts = [];\n      }\n    },\n    getExchangeRate: function () {\n      var _this3 = this;\n\n      this.exchangeRate = 0;\n      findExchanges.callPromise({}).then(function (result) {\n        if (result.length > 0) {\n          _this3.exchangeRate = result[0].khr;\n        } else {\n          _this3.exchangeRate = 0;\n        }\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    getStudentData: function (val) {\n      var _this4 = this;\n\n      var selector = {\n        type: val,\n        remove: false\n      };\n      lookupStudent.callPromise({\n        selector: selector\n      }).then(function (result) {\n        _this4.studentIdOpts = result;\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    handleSave: function () {\n      var _this5 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          _this5.form.rsDate = wrapCurrentTime(_this5.form.rsDate);\n          _this5.form.dob = wrapCurrentTime(_this5.form.dob);\n          _this5.form.tranDate = wrapCurrentTime(moment().toDate());\n          _this5.form.payDate = wrapCurrentTime(_this5.form.payDate);\n          _this5.form.endPayDate = wrapCurrentTime(moment(_this5.form.payDate).add(_this5.form.duration, 'months'));\n\n          if (_this5.form.remaining !== 0) {\n            _this5.form.status = 'Debt';\n          } else {\n            _this5.form.status = 'Paid';\n          }\n\n          var recieveKhr = _this5.form.khr / _this5.exchangeRate;\n          isNaN(recieveKhr) == true ? recieveKhr = 0 : recieveKhr = recieveKhr;\n          var totalRecieve = _this5.form.usd + recieveKhr + _this5.form.discountVal;\n          var doc = {\n            _id: _this5.form._id,\n            tranDate: _this5.form.tranDate,\n            classId: _this5.form.classId,\n            studentId: _this5.form.studentId,\n            refType: 'New',\n            payDate: _this5.form.payDate,\n            duration: _this5.form.duration,\n            endPayDate: _this5.form.endPayDate,\n            usd: _this5.form.usd,\n            discountVal: _this5.form.discountVal,\n            totalPay: _this5.form.totalPay,\n            khr: _this5.form.khr,\n            remaining: _this5.form.remaining,\n            status: _this5.form.status,\n            type: _this5.form.type,\n            fee: parseInt(_this5.form.fee),\n            totalRecieve: totalRecieve\n          };\n          console.log(doc); // updatePayementForNew\n          //   .callPromise({ doc: this.form })\n          //   .then(result => {\n          //     Msg.success()\n          //     this.handleClose()\n          //   })\n          //   .catch(error => {\n          //     Notify.error({ message: error })\n          //   })\n        } else {\n          return false;\n        }\n      });\n    },\n    remoteMethod: function (query) {\n      var _this6 = this;\n\n      var selector = {\n        type: this.type\n      };\n\n      if (query !== '') {\n        this.loading = true;\n        setTimeout(function () {\n          _this6.loading = false;\n          lookupStudent.callPromise({\n            selector: selector\n          }).then(function (result) {\n            _this6.studentIdOpts = result.filter(function (item) {\n              return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1;\n            });\n          }).catch(function (error) {\n            Notify.error({\n              message: error.reason\n            });\n          });\n        }, 200);\n      } else {\n        this.loading = true;\n        lookupStudent.callPromise({\n          selector: selector\n        }).then(function (result) {\n          _this6.studentIdOpts = result;\n          _this6.loading = false;\n        }).catch(function (err) {\n          Notify.error({\n            message: err.reason\n          });\n        });\n      }\n    },\n    resetForm: function () {\n      this.$refs['form'].resetFields();\n      this.classIdOpts = [];\n    },\n    handleClose: function () {\n      this.$router.go(-1);\n    },\n    formatNumer: function (val) {\n      return numeral(val).format('0,0.00 $');\n    }\n  }\n});","map":{"version":3,"sources":["/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterUpdate.vue"],"names":["Notify","module","link","v","Msg","wrapCurrentTime","moment","Lookup","getNextRef","lookupClass","lookupStudent","updatePayementForNew","findOnePaymentByCode","findExchanges","numeral","require","exportDefault","props","visible","type","Boolean","updateDoc","Object","data","validateCode","rule","value","callback","Error","setTimeout","selector","receiptCode","callPromise","then","result","catch","error","message","loading","refNumLoading","typeOpts","classIdOpts","genderOpts","gender","studentIdOpts","remaining","exchangeRate","form","rules","validator","trigger","rsDate","required","fee","classId","studentId","payDate","duration","usd","khr","totalPay","watch","val","mounted","console","log","$route","params","id","methods","getNextRefNum","collectionName","opts","field","paddingType","paddingLength","paddingChar","prefix","handleTypeChange","status","getStudentData","getExchangeRate","length","remove","handleSave","$refs","validate","valid","dob","tranDate","toDate","endPayDate","add","recieveKhr","isNaN","totalRecieve","discountVal","doc","_id","refType","parseInt","remoteMethod","query","filter","item","label","toLowerCase","indexOf","reason","err","resetForm","resetFields","handleClose","$router","go","formatNumer","format"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Notify from '/imports/client/lib/notify'\nimport Msg from '/imports/client/lib/message'\nimport wrapCurrentTime from '/imports/client/lib/wrap-current-time'\nimport moment from 'moment'\nimport Lookup from '/imports/client/lib/Lookup-Value'\nimport { getNextRef } from '/imports/utils/get-next-ref'\nimport { lookupClass, lookupStudent } from '/imports/utils/lookup-methods'\nimport { updatePayementForNew,findOnePaymentByCode } from '/imports/modules/school/api/payment/methods'\nimport { findExchanges } from '/imports/api/exchanges/methods.js'\n\nconst numeral = require('numeral')\nexport default {\n  // name: 'RegisterUpdate',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    updateDoc: {\n      type: Object,\n      default: null,\n    },\n  },\n  data() {\n     // Check Code\n    const validateCode = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('Code is requiered'))\n      }\n      setTimeout(() => {\n        let selector = {\n          receiptCode: value,\n          // _id:{$ne:this.form._id}\n        }\n        findOnePaymentByCode\n          .callPromise({ selector })\n          .then(result => {\n            if (result) {\n              callback(new Error('This code is exist'))\n            } else {\n              callback()\n            }\n          })\n          .catch(error => {\n            Notify.error({ message: error })\n          })\n      }, 1000)\n    }\n    return {\n      loading: false,\n      refNumLoading: 'eg. 1',\n      typeOpts: Lookup.type,\n      classIdOpts: [],\n      genderOpts: Lookup.gender,\n      studentIdOpts: [],\n      remaining: 0,\n      exchangeRate: 0,\n      type: '',\n      // form: this.updateDoc,\n      form:{},\n\n      rules: {\n        receiptCode: [{ validator: validateCode, trigger: 'change' }],\n        rsDate: [\n          { required: true, message: 'Date is Required', trigger: 'change' },\n        ],\n        type: [\n          { required: true, message: 'Type is Required', trigger: 'change' },\n        ],\n        fee: [{ required: true, message: 'Fee is Required', trigger: 'blure' }],\n        classId: [\n          { required: true, message: 'Class is Required', trigger: 'change' },\n        ],\n        studentId: [\n          {\n            required: true,\n            message: 'Student ID is required',\n            trigger: 'change',\n          },\n        ],\n        payDate: [\n          { required: true, message: 'Date is Required', trigger: 'change' },\n        ],\n        duration: [\n          { required: true, message: 'Duration is required' },\n          { type: 'number', message: 'Duration must be a number' },\n        ],\n        usd: [{ required: true, message: 'Total is required' }],\n        khr: [{ required: true, message: 'Total is required' }],\n        totalPay: [{ required: true, message: 'Total must be a number' }],\n      },\n    }\n  },\n  watch: {\n    'form.duration'(val) {\n      this.form.totalPay = val * this.form.fee\n    },\n    // 'form.usd'(val) {\n    //   this.remaining = val\n    // },\n    // 'form.discountVal'(val) {\n    //   this.remaining = this.form.usd - val\n    //   this.form.remaining = this.form.usd - val\n    //   if (this.remaining < 0) {\n    //     Notify.warning({\n    //       message: 'Discount Balance is bigger than Total balance',\n    //     })\n    //     this.form.khr = 0\n    //   }\n    // },\n    // 'form.khr'(val) {\n    //   this.remaining = this.form.usd - this.form.discountVal - val\n    //   this.form.remaining = this.form.usd - this.form.discountVal - val\n    //   if (this.remaining < 0) {\n    //     Notify.warning({ message: 'khr Balance is bigger than Total balance' })\n    //     this.form.khr = 0\n    //   }\n    // },\n    // 'form.type'(val){\n    //   this.handleTypeChange(val)\n    // }\n  },\n\n  mounted() {\n    // this.getExchangeRate()\n    // this.handleTypeChange(this.form.type)\n    console.log(this.$route.params.id)\n  },\n  methods: {\n    getNextRefNum() {\n      this.refNumLoading = 'Loading....'\n      getNextRef\n        .callPromise({\n          collectionName: 'payment',\n          opts: {\n            field: 'receiptCode',\n            // selector: {},\n            paddingType: 'start',\n            paddingLength: 5,\n            paddingChar: '0',\n            prefix: '',\n          },\n        })\n        .then(result => {\n          if (result) {\n            this.form.receiptCode = result\n          }\n        })\n        .catch(error => {\n          this.refNumLoading = 'eg. 1'\n          Notify.error({ message: error })\n        })\n    },\n    handleTypeChange(val) {\n      if (val) {\n        let selector = {\n          type: val,\n          status:'Active'\n        }\n        lookupClass\n          .callPromise({ selector })\n          .then(result => {\n            this.classIdOpts = result\n          })\n          .catch(error => {\n            Notify.error({ message: error })\n          })\n        this.type = val\n        this.getStudentData(val)\n      } else {\n        this.form.classId = ''\n        this.classIdOpts = []\n      }\n    },\n    getExchangeRate() {\n      this.exchangeRate=0\n      findExchanges\n        .callPromise({})\n        .then(result => {\n          if(result.length>0){\n            this.exchangeRate = result[0].khr\n          }else{\n            this.exchangeRate=0\n          }\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    getStudentData(val) {\n      let selector = {\n        type: val,\n        remove: false,\n      }\n      lookupStudent\n        .callPromise({ selector })\n        .then(result => {\n          this.studentIdOpts = result\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    handleSave() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          this.form.rsDate = wrapCurrentTime(this.form.rsDate)\n          this.form.dob = wrapCurrentTime(this.form.dob)\n          this.form.tranDate = wrapCurrentTime(moment().toDate())\n          this.form.payDate = wrapCurrentTime(this.form.payDate)\n          this.form.endPayDate = wrapCurrentTime(\n            moment(this.form.payDate).add(this.form.duration, 'months')\n          )\n          if (this.form.remaining !== 0) {\n            this.form.status = 'Debt'\n          } else {\n            this.form.status = 'Paid'\n          }\n          let recieveKhr = this.form.khr / this.exchangeRate\n          \n          isNaN(recieveKhr) == true ? recieveKhr=0 : recieveKhr=recieveKhr\n          \n          let totalRecieve = this.form.usd + recieveKhr + this.form.discountVal\n          let doc = {\n            _id:this.form._id,\n            tranDate: this.form.tranDate,\n            classId: this.form.classId,\n            studentId: this.form.studentId,\n            refType: 'New',\n            payDate: this.form.payDate,\n            duration: this.form.duration,\n            endPayDate: this.form.endPayDate,\n            usd: this.form.usd,\n            discountVal: this.form.discountVal,\n            totalPay: this.form.totalPay,\n            khr: this.form.khr,\n            remaining: this.form.remaining,\n            status: this.form.status,\n            type: this.form.type,\n            fee: parseInt(this.form.fee),\n            totalRecieve: totalRecieve,\n          }\n          console.log(doc)\n\n          // updatePayementForNew\n          //   .callPromise({ doc: this.form })\n          //   .then(result => {\n          //     Msg.success()\n          //     this.handleClose()\n          //   })\n          //   .catch(error => {\n          //     Notify.error({ message: error })\n          //   })\n        } else {\n          return false\n        }\n      })\n    },\n    remoteMethod(query) {\n      let selector = {\n        type: this.type,\n      }\n      if (query !== '') {\n        this.loading = true\n        setTimeout(() => {\n          this.loading = false\n\n          lookupStudent\n            .callPromise({ selector })\n            .then(result => {\n              this.studentIdOpts = result.filter(item => {\n                return (\n                  item.label.toLowerCase().indexOf(query.toLowerCase()) > -1\n                )\n              })\n            })\n            .catch(error => {\n              Notify.error({ message: error.reason })\n            })\n        }, 200)\n      } else {\n        this.loading = true\n        lookupStudent\n          .callPromise({ selector })\n          .then(result => {\n            this.studentIdOpts = result\n            this.loading = false\n          })\n          .catch(err => {\n            Notify.error({ message: err.reason })\n          })\n      }\n    },\n    resetForm() {\n      this.$refs['form'].resetFields()\n      this.classIdOpts = []\n    },\n    handleClose() {\n      this.$router.go(-1)\n    },\n    formatNumer(val) {\n      return numeral(val).format('0,0.00 $')\n    },\n  },\n}\n"]},"sourceType":"script","hash":"7ad06c6d1ee242b412424fe1d5f5cdb05dd00bd2"}
