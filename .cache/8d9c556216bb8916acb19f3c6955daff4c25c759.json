{"metadata":{},"options":{"plugins":[{"key":"/Users/rabbit/Desktop/app/bad-system/node_modules/babel-plugin-transform-vue-jsx/index.js","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/ClassForm.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/ClassForm.vue","filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/ClassForm.vue","passPerPreset":false,"envName":"development","cwd":"/Users/rabbit/Desktop/app/bad-system","root":"/Users/rabbit/Desktop/app/bad-system","generatorOpts":{"filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/ClassForm.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/ClassForm.vue"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar MsgBox;\nmodule.link(\"/imports/client/lib/message\", {\n  \"default\": function (v) {\n    MsgBox = v;\n  }\n}, 0);\nvar Notify;\nmodule.link(\"/imports/client/lib/notify\", {\n  \"default\": function (v) {\n    Notify = v;\n  }\n}, 1);\nvar wrapCurrentTime;\nmodule.link(\"/imports/client/lib/wrap-current-time\", {\n  \"default\": function (v) {\n    wrapCurrentTime = v;\n  }\n}, 2);\nvar mapState;\nmodule.link(\"vuex\", {\n  mapState: function (v) {\n    mapState = v;\n  }\n}, 3);\nvar getNextRef;\nmodule.link(\"/imports/utils/get-next-ref\", {\n  getNextRef: function (v) {\n    getNextRef = v;\n  }\n}, 4);\nvar findTimeStudyOpts;\nmodule.link(\"/imports/modules/school/api/time/methods\", {\n  findTimeStudyOpts: function (v) {\n    findTimeStudyOpts = v;\n  }\n}, 5);\nvar checkClassExist;\nmodule.link(\"/imports/modules/school/api/lib/check-room-exist\", {\n  checkClassExist: function (v) {\n    checkClassExist = v;\n  }\n}, 6);\nvar insertClassStudy, findOneClassStudy, updateClassStudy;\nmodule.link(\"/imports/modules/school/api/class-study/methods\", {\n  insertClassStudy: function (v) {\n    insertClassStudy = v;\n  },\n  findOneClassStudy: function (v) {\n    findOneClassStudy = v;\n  },\n  updateClassStudy: function (v) {\n    updateClassStudy = v;\n  }\n}, 7);\nvar findRoomOpts;\nmodule.link(\"/imports/modules/school/api/rooms/methods\", {\n  findRoomOpts: function (v) {\n    findRoomOpts = v;\n  }\n}, 8);\nvar findStaffOpts;\nmodule.link(\"/imports/modules/school/api/staffs/methods\", {\n  findStaffOpts: function (v) {\n    findStaffOpts = v;\n  }\n}, 9);\nvar findSubjectOpts;\nmodule.link(\"/imports/modules/school/api/subject/methods\", {\n  findSubjectOpts: function (v) {\n    findSubjectOpts = v;\n  }\n}, 10);\nvar rateSalaryOpts;\nmodule.link(\"/imports/modules/school/api/rate-salary/methods\", {\n  rateSalaryOpts: function (v) {\n    rateSalaryOpts = v;\n  }\n}, 11);\nvar lookupValue;\nmodule.link(\"../../client/lib/Lookup-Value\", {\n  \"default\": function (v) {\n    lookupValue = v;\n  }\n}, 12);\nvar LookUp;\nmodule.link(\"../../client/lib/Lookup-Value\", {\n  \"default\": function (v) {\n    LookUp = v;\n  }\n}, 13);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 14);\n\nvar _;\n\nmodule.link(\"lodash\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 15);\nmodule.exportDefault({\n  name: 'ClassForm',\n  props: {\n    visible: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function () {\n    var _this = this;\n\n    var validateCode = function (rule, value, callback) {\n      if (!value) {\n        return callback(new Error('Code is requiered'));\n      }\n\n      setTimeout(function () {\n        var selector = {\n          code: value,\n          branchId: _this.currentBranchId\n        };\n\n        if (_this.showId) {\n          selector._id = {\n            $ne: _this.showId\n          };\n        }\n\n        findOneClassStudy.callPromise({\n          selector: selector\n        }).then(function (result) {\n          if (result) {\n            callback(new Error('This code is existed'));\n          } else {\n            callback();\n          }\n        }).catch(function (error) {\n          Notify.error({\n            message: error\n          });\n        });\n      }, 1000);\n    };\n\n    var validateClass = function (rule, value, callback) {\n      if (!value) {\n        return callback(new Error('This field is requiered'));\n      } else {\n        if (_this.form.type && _this.form.roomId && _this.form.timeId) {\n          setTimeout(function () {\n            var selector = {\n              type: _this.form.type,\n              roomId: _this.form.roomId,\n              timeId: _this.form.timeId,\n              branchId: _this.currentBranchId\n            };\n\n            if (_this.showId) {\n              selector._id = {\n                $ne: _this.showId\n              };\n            }\n\n            checkClassExist.callPromise({\n              selector: selector\n            }).then(function (result) {\n              if (result) {\n                MsgBox.warning('This room is exist!');\n                callback(new Error('This room is existed'));\n              } else {\n                callback();\n              }\n            }).catch(function (error) {\n              Notify.error({\n                message: error\n              });\n            });\n          }, 1000);\n        } else {\n          callback();\n        }\n      }\n    };\n\n    return {\n      // Show\n      showId: this.$route.params.id,\n      // loading\n      loading: {\n        form: false,\n        code: 'Select',\n        room: 'Select',\n        time: 'Select',\n        teacher: 'Select',\n        subject: 'Select',\n        rate: 'Select'\n      },\n      // opts\n      statusOpts: lookupValue.status,\n      roomIdOpts: [],\n      timeIdOpts: [],\n      staffIdOpts: [],\n      subIdOpts: [],\n      typeOpts: LookUp.type,\n      rateOpt: [],\n      // form\n      // formSize: 'mini',\n      form: {\n        code: '',\n        classDate: moment().toDate(),\n        roomId: '',\n        timeId: '',\n        staffId: '',\n        subId: '',\n        type: 'Part_Time',\n        status: 'Active',\n        rateId: ''\n      },\n      rules: {\n        code: [{\n          validate: validateCode,\n          required: true,\n          triiger: 'change'\n        }],\n        classDate: [{\n          required: true,\n          message: 'Please Select Date',\n          trigger: 'chnage'\n        }],\n        roomId: [{\n          validator: validateClass,\n          required: true,\n          trigger: 'change'\n        }],\n        timeId: [{\n          validator: validateClass,\n          required: true,\n          trigger: 'change'\n        }],\n        staffId: [{\n          required: true,\n          message: 'Please Select Teacher',\n          trigger: 'change'\n        }],\n        subId: [{\n          required: true,\n          message: 'Please Select Subject',\n          trigger: 'change'\n        }],\n        type: [{\n          validator: validateClass,\n          required: true,\n          trigger: 'change'\n        }],\n        status: [{\n          required: true,\n          message: 'Please Select Status',\n          trigger: 'change'\n        }],\n        rateId: [{\n          required: true,\n          message: 'Please Select Rate',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, mapState({\n    currentBranchId: function (state) {\n      return state.app && state.app.currentBranch._id;\n    }\n  }), {\n    dateFormat: function () {\n      return this.$store.getters['app/dateFormat'];\n    },\n    formSize: function () {\n      return this.$store.getters['app/formInterface'];\n    }\n  }),\n  watch: {// 'form.status'(val) {\n    //   console.log(val)\n    // },\n    // 'form.type'(val) {\n    //   console.log(val)\n    // },\n  },\n  created: function () {\n    if (!this.showId) this._getNextRefNum();\n\n    this._getRoomOpts();\n\n    this._getStaffOpts();\n\n    this._getSubjectOpts();\n\n    this._getTimeOpts();\n\n    this._getRateOpts();\n  },\n  mounted: function () {\n    if (this.showId) this._getDataUpdate();\n  },\n  methods: {\n    _getDataUpdate: function () {\n      var _this2 = this;\n\n      // console.log(this.showId);\n      this.loading.form = true;\n      findOneClassStudy.callPromise({\n        selector: {\n          _id: this.showId\n        }\n      }).then(function (result) {\n        _this2.form = result;\n        _this2.loading.form = false;\n      }).catch(function (error) {\n        _this2.loading.form = false;\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    _getNextRefNum: function () {\n      var _this3 = this;\n\n      this.loading.code = 'Loading....'; // getNextRef\n\n      getNextRef.callPromise({\n        collectionName: 'sch_classStudy',\n        opts: {\n          field: 'code',\n          selector: {\n            branchId: this.currentBranchId\n          },\n          paddingType: 'start',\n          paddingLength: 5,\n          paddingChar: '0' // prefix: {},\n\n        }\n      }).then(function (result) {\n        if (result) {\n          _this3.loading.code = '';\n          _this3.form.code = result;\n        }\n      }).catch(function (error) {\n        _this3.loading.code = '';\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    _getRoomOpts: function () {\n      var _this4 = this;\n\n      this.loading.room = 'Loading....';\n      findRoomOpts.callPromise({}).then(function (result) {\n        _this4.loading.room = 'Select';\n        _this4.roomIdOpts = result;\n      }).catch(function (err) {\n        _this4.loading.room = 'Select';\n        Notify.error({\n          message: err\n        });\n      });\n    },\n    _getStaffOpts: function () {\n      var _this5 = this;\n\n      this.loading.teacher = 'Loading...';\n      findStaffOpts.callPromise({\n        selector: {\n          branchId: this.currentBranchId\n        }\n      }).then(function (result) {\n        _this5.loading.teacher = 'Select';\n        _this5.staffIdOpts = result;\n      }).catch(function (err) {\n        _this5.loading.teacher = 'Select';\n        Notify.error({\n          message: err\n        });\n      });\n    },\n    _getSubjectOpts: function () {\n      var _this6 = this;\n\n      this.loading.subject = 'Loading...';\n      findSubjectOpts.callPromise({}).then(function (result) {\n        _this6.loading.subject = 'Select';\n        _this6.subIdOpts = result;\n      }).catch(function (err) {\n        _this6.loading.subject = 'Select';\n        Notify.error({\n          message: err\n        });\n      });\n    },\n    _getTimeOpts: function () {\n      var _this7 = this;\n\n      this.loading.time = 'Loading...';\n      findTimeStudyOpts.callPromise({}).then(function (result) {\n        _this7.loading.time = 'Select';\n        _this7.timeIdOpts = result;\n      }).catch(function (err) {\n        _this7.loading.time = 'Select';\n        Notify.error({\n          message: err\n        });\n      });\n    },\n    _getRateOpts: function () {\n      var _this8 = this;\n\n      this.loading.rate = 'Loading...';\n      rateSalaryOpts.callPromise({}).then(function (result) {\n        _this8.loading.rate = 'Select'; // console.log(result)\n\n        _this8.rateOpt = result;\n      }).catch(function (error) {\n        _this8.loading.rate = 'Select';\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    _submitForm: function (type) {\n      var _this9 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          // Pick up data\n          _this9.form.branchId = _this9.currentBranchId;\n          _this9.form.classDate = wrapCurrentTime(_this9.form.classDate);\n\n          if (_this9.showId) {\n            updateClassStudy.callPromise({\n              doc: _this9.form\n            }).then(function (result) {\n              if (result) {\n                MsgBox.success();\n                type == 'new' ? _this9.handleresetForm() : _this9.handleClose();\n              }\n            }).catch(function (err) {\n              Notify.error({\n                message: err\n              });\n            });\n          } else {\n            insertClassStudy.callPromise({\n              doc: _this9.form\n            }).then(function (result) {\n              if (result) {\n                MsgBox.success();\n                type == 'new' ? _this9.handleresetForm() : _this9.handleClose();\n              }\n            }).catch(function (err) {\n              Notify.error({\n                message: err\n              });\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose: function () {\n      // this.$emit('modal-close')\n      this.$router.push({\n        name: 'sch.classList'\n      });\n    },\n    handleresetForm: function () {\n      this.$refs['form'].resetFields(); // this.$router.push({ name: 'sch.classForm', params: { type: 'new' } })\n\n      this._getNextRefNum();\n    },\n    formatTime: function (val) {\n      var data = _.map(val).map(function (o) {\n        return moment(o).format('LT');\n      }).join('-');\n\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/ClassForm.vue"],"names":["MsgBox","module","link","v","Notify","wrapCurrentTime","mapState","getNextRef","findTimeStudyOpts","checkClassExist","insertClassStudy","findOneClassStudy","updateClassStudy","findRoomOpts","findStaffOpts","findSubjectOpts","rateSalaryOpts","lookupValue","LookUp","moment","_","exportDefault","name","props","visible","type","Boolean","data","validateCode","rule","value","callback","Error","setTimeout","selector","code","branchId","currentBranchId","showId","_id","$ne","callPromise","then","result","catch","error","message","validateClass","form","roomId","timeId","warning","$route","params","id","loading","room","time","teacher","subject","rate","statusOpts","status","roomIdOpts","timeIdOpts","staffIdOpts","subIdOpts","typeOpts","rateOpt","classDate","toDate","staffId","subId","rateId","rules","validate","required","triiger","trigger","validator","computed","state","app","currentBranch","dateFormat","$store","getters","formSize","watch","created","_getNextRefNum","_getRoomOpts","_getStaffOpts","_getSubjectOpts","_getTimeOpts","_getRateOpts","mounted","_getDataUpdate","methods","collectionName","opts","field","paddingType","paddingLength","paddingChar","err","_submitForm","$refs","valid","doc","success","handleresetForm","handleClose","$router","push","resetFields","formatTime","val","map","o","format","join"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MsgBox from '/imports/client/lib/message'\nimport Notify from '/imports/client/lib/notify'\nimport wrapCurrentTime from '/imports/client/lib/wrap-current-time'\nimport { mapState } from 'vuex'\n\nimport { getNextRef } from '/imports/utils/get-next-ref'\n\nimport { findTimeStudyOpts } from '/imports/modules/school/api/time/methods'\nimport { checkClassExist } from '/imports/modules/school/api/lib/check-room-exist'\nimport {\n  insertClassStudy,\n  findOneClassStudy,\n  updateClassStudy,\n} from '/imports/modules/school/api/class-study/methods'\nimport { findRoomOpts } from '/imports/modules/school/api/rooms/methods'\nimport { findStaffOpts } from '/imports/modules/school/api/staffs/methods'\nimport { findSubjectOpts } from '/imports/modules/school/api/subject/methods'\nimport { rateSalaryOpts } from '/imports/modules/school/api/rate-salary/methods'\nimport lookupValue from '../../client/lib/Lookup-Value'\nimport LookUp from '../../client/lib/Lookup-Value'\nimport moment from 'moment'\nimport _ from 'lodash'\nexport default {\n  name: 'ClassForm',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    const validateCode = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('Code is requiered'))\n      }\n\n      setTimeout(() => {\n        let selector = {\n          code: value,\n          branchId: this.currentBranchId,\n        }\n\n        if (this.showId) {\n          selector._id = { $ne: this.showId }\n        }\n\n        findOneClassStudy\n          .callPromise({ selector })\n          .then(result => {\n            if (result) {\n              callback(new Error('This code is existed'))\n            } else {\n              callback()\n            }\n          })\n          .catch(error => {\n            Notify.error({ message: error })\n          })\n      }, 1000)\n    }\n\n    const validateClass = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('This field is requiered'))\n      } else {\n        if (this.form.type && this.form.roomId && this.form.timeId) {\n          setTimeout(() => {\n            let selector = {\n              type: this.form.type,\n              roomId: this.form.roomId,\n              timeId: this.form.timeId,\n              branchId: this.currentBranchId,\n            }\n            if (this.showId) {\n              selector._id = { $ne: this.showId }\n            }\n\n            checkClassExist\n              .callPromise({ selector })\n              .then(result => {\n                if (result) {\n                  MsgBox.warning('This room is exist!')\n                  callback(new Error('This room is existed'))\n                } else {\n                  callback()\n                }\n              })\n              .catch(error => {\n                Notify.error({ message: error })\n              })\n          }, 1000)\n        } else {\n          callback()\n        }\n      }\n    }\n\n    return {\n      // Show\n      showId: this.$route.params.id,\n\n      // loading\n      loading: {\n        form: false,\n        code: 'Select',\n        room: 'Select',\n        time: 'Select',\n        teacher: 'Select',\n        subject: 'Select',\n        rate: 'Select',\n      },\n      // opts\n      statusOpts: lookupValue.status,\n      roomIdOpts: [],\n      timeIdOpts: [],\n      staffIdOpts: [],\n      subIdOpts: [],\n      typeOpts: LookUp.type,\n      rateOpt: [],\n      // form\n      // formSize: 'mini',\n      form: {\n        code: '',\n        classDate: moment().toDate(),\n        roomId: '',\n        timeId: '',\n        staffId: '',\n        subId: '',\n        type: 'Part_Time',\n        status: 'Active',\n        rateId: '',\n      },\n      rules: {\n        code: [{ validate: validateCode, required: true, triiger: 'change' }],\n        classDate: [\n          {\n            required: true,\n            message: 'Please Select Date',\n            trigger: 'chnage',\n          },\n        ],\n        roomId: [\n          {\n            validator: validateClass,\n            required: true,\n            trigger: 'change',\n          },\n        ],\n        timeId: [\n          {\n            validator: validateClass,\n            required: true,\n            trigger: 'change',\n          },\n        ],\n        staffId: [\n          {\n            required: true,\n            message: 'Please Select Teacher',\n            trigger: 'change',\n          },\n        ],\n        subId: [\n          {\n            required: true,\n            message: 'Please Select Subject',\n            trigger: 'change',\n          },\n        ],\n        type: [\n          {\n            validator: validateClass,\n            required: true,\n            trigger: 'change',\n          },\n        ],\n        status: [\n          {\n            required: true,\n            message: 'Please Select Status',\n            trigger: 'change',\n          },\n        ],\n        rateId: [\n          {\n            required: true,\n            message: 'Please Select Rate',\n            trigger: 'change',\n          },\n        ],\n      },\n    }\n  },\n\n  computed: {\n    ...mapState({\n      currentBranchId(state) {\n        return state.app && state.app.currentBranch._id\n      },\n    }),\n    dateFormat() {\n      return this.$store.getters['app/dateFormat']\n    },\n    formSize() {\n      return this.$store.getters['app/formInterface']\n    },\n  },\n  watch: {\n    // 'form.status'(val) {\n    //   console.log(val)\n    // },\n    // 'form.type'(val) {\n    //   console.log(val)\n    // },\n  },\n  created() {\n    if (!this.showId) this._getNextRefNum()\n    this._getRoomOpts()\n    this._getStaffOpts()\n    this._getSubjectOpts()\n    this._getTimeOpts()\n    this._getRateOpts()\n  },\n  mounted() {\n    if (this.showId) this._getDataUpdate()\n  },\n  methods: {\n    _getDataUpdate() {\n      // console.log(this.showId);\n      this.loading.form = true\n      findOneClassStudy\n        .callPromise({ selector: { _id: this.showId } })\n        .then(result => {\n          this.form = result\n          this.loading.form = false\n        })\n        .catch(error => {\n          this.loading.form = false\n          Notify.error({ message: error })\n        })\n    },\n    _getNextRefNum() {\n      this.loading.code = 'Loading....'\n      // getNextRef\n      getNextRef\n        .callPromise({\n          collectionName: 'sch_classStudy',\n          opts: {\n            field: 'code',\n            selector: { branchId: this.currentBranchId },\n            paddingType: 'start',\n            paddingLength: 5,\n            paddingChar: '0',\n            // prefix: {},\n          },\n        })\n        .then(result => {\n          if (result) {\n            this.loading.code = ''\n            this.form.code = result\n          }\n        })\n        .catch(error => {\n          this.loading.code = ''\n          Notify.error({ message: error })\n        })\n    },\n\n    _getRoomOpts() {\n      this.loading.room = 'Loading....'\n      findRoomOpts\n        .callPromise({})\n        .then(result => {\n          this.loading.room = 'Select'\n          this.roomIdOpts = result\n        })\n        .catch(err => {\n          this.loading.room = 'Select'\n          Notify.error({ message: err })\n        })\n    },\n    _getStaffOpts() {\n      this.loading.teacher = 'Loading...'\n      findStaffOpts\n        .callPromise({ selector: { branchId: this.currentBranchId } })\n        .then(result => {\n          this.loading.teacher = 'Select'\n          this.staffIdOpts = result\n        })\n        .catch(err => {\n          this.loading.teacher = 'Select'\n          Notify.error({ message: err })\n        })\n    },\n    _getSubjectOpts() {\n      this.loading.subject = 'Loading...'\n      findSubjectOpts\n        .callPromise({})\n        .then(result => {\n          this.loading.subject = 'Select'\n          this.subIdOpts = result\n        })\n        .catch(err => {\n          this.loading.subject = 'Select'\n          Notify.error({ message: err })\n        })\n    },\n\n    _getTimeOpts() {\n      this.loading.time = 'Loading...'\n      findTimeStudyOpts\n        .callPromise({})\n        .then(result => {\n          this.loading.time = 'Select'\n          this.timeIdOpts = result\n        })\n        .catch(err => {\n          this.loading.time = 'Select'\n          Notify.error({ message: err })\n        })\n    },\n    _getRateOpts() {\n      this.loading.rate = 'Loading...'\n      rateSalaryOpts\n        .callPromise({})\n        .then(result => {\n          this.loading.rate = 'Select'\n          // console.log(result)\n          this.rateOpt = result\n        })\n        .catch(error => {\n          this.loading.rate = 'Select'\n          Notify.error({ message: error })\n        })\n    },\n    _submitForm(type) {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          // Pick up data\n          this.form.branchId = this.currentBranchId\n          this.form.classDate = wrapCurrentTime(this.form.classDate)\n          if (this.showId) {\n            updateClassStudy\n              .callPromise({ doc: this.form })\n              .then(result => {\n                if (result) {\n                  MsgBox.success()\n                  type == 'new' ? this.handleresetForm() : this.handleClose()\n                }\n              })\n              .catch(err => {\n                Notify.error({ message: err })\n              })\n          } else {\n            insertClassStudy\n              .callPromise({ doc: this.form })\n              .then(result => {\n                if (result) {\n                  MsgBox.success()\n                  type == 'new' ? this.handleresetForm() : this.handleClose()\n                }\n              })\n              .catch(err => {\n                Notify.error({ message: err })\n              })\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    handleClose() {\n      // this.$emit('modal-close')\n      this.$router.push({ name: 'sch.classList' })\n    },\n    handleresetForm() {\n      this.$refs['form'].resetFields()\n      // this.$router.push({ name: 'sch.classForm', params: { type: 'new' } })\n      this._getNextRefNum()\n    },\n    formatTime(val) {\n      let data = _.map(val)\n        .map(o => {\n          return moment(o).format('LT')\n        })\n        .join('-')\n      return data\n    },\n  },\n}\n"]},"sourceType":"script","hash":"8d9c556216bb8916acb19f3c6955daff4c25c759"}
