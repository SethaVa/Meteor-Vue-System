{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/upload/src/index.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/upload/src/index.vue","filename":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/upload/src/index.vue","passPerPreset":false,"envName":"development","cwd":"/home/vy/Desktop/B.A.D/bad-system","root":"/home/vy/Desktop/B.A.D/bad-system","generatorOpts":{"filename":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/upload/src/index.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/upload/src/index.vue"}},"code":"var UploadList;\nmodule.link(\"./upload-list\", {\n  \"default\": function (v) {\n    UploadList = v;\n  }\n}, 0);\nvar Upload;\nmodule.link(\"./upload\", {\n  \"default\": function (v) {\n    Upload = v;\n  }\n}, 1);\nvar ElProgress;\nmodule.link(\"element-ui/packages/progress\", {\n  \"default\": function (v) {\n    ElProgress = v;\n  }\n}, 2);\nvar Migrating;\nmodule.link(\"element-ui/src/mixins/migrating\", {\n  \"default\": function (v) {\n    Migrating = v;\n  }\n}, 3);\n\nfunction noop() {}\n\nmodule.exportDefault({\n  name: 'ElUpload',\n  mixins: [Migrating],\n  components: {\n    ElProgress: ElProgress,\n    UploadList: UploadList,\n    Upload: Upload\n  },\n  provide: function () {\n    return {\n      uploader: this\n    };\n  },\n  inject: {\n    elForm: {\n      \"default\": ''\n    }\n  },\n  props: {\n    action: {\n      type: String,\n      required: true\n    },\n    headers: {\n      type: Object,\n      \"default\": function () {\n        return {};\n      }\n    },\n    data: Object,\n    multiple: Boolean,\n    name: {\n      type: String,\n      \"default\": 'file'\n    },\n    drag: Boolean,\n    dragger: Boolean,\n    withCredentials: Boolean,\n    showFileList: {\n      type: Boolean,\n      \"default\": true\n    },\n    accept: String,\n    type: {\n      type: String,\n      \"default\": 'select'\n    },\n    beforeUpload: Function,\n    beforeRemove: Function,\n    onRemove: {\n      type: Function,\n      \"default\": noop\n    },\n    onChange: {\n      type: Function,\n      \"default\": noop\n    },\n    onPreview: {\n      type: Function\n    },\n    onSuccess: {\n      type: Function,\n      \"default\": noop\n    },\n    onProgress: {\n      type: Function,\n      \"default\": noop\n    },\n    onError: {\n      type: Function,\n      \"default\": noop\n    },\n    fileList: {\n      type: Array,\n      \"default\": function () {\n        return [];\n      }\n    },\n    autoUpload: {\n      type: Boolean,\n      \"default\": true\n    },\n    listType: {\n      type: String,\n      \"default\": 'text' // text,picture,picture-card\n\n    },\n    httpRequest: Function,\n    disabled: Boolean,\n    limit: Number,\n    onExceed: {\n      type: Function,\n      \"default\": noop\n    }\n  },\n  data: function () {\n    return {\n      uploadFiles: [],\n      dragOver: false,\n      draging: false,\n      tempIndex: 1\n    };\n  },\n  computed: {\n    uploadDisabled: function () {\n      return this.disabled || (this.elForm || {}).disabled;\n    }\n  },\n  watch: {\n    fileList: {\n      immediate: true,\n      handler: function (fileList) {\n        var _this = this;\n\n        this.uploadFiles = fileList.map(function (item) {\n          item.uid = item.uid || Date.now() + _this.tempIndex++;\n          item.status = item.status || 'success';\n          return item;\n        });\n      }\n    }\n  },\n  methods: {\n    handleStart: function (rawFile) {\n      rawFile.uid = Date.now() + this.tempIndex++;\n      var file = {\n        status: 'ready',\n        name: rawFile.name,\n        size: rawFile.size,\n        percentage: 0,\n        uid: rawFile.uid,\n        raw: rawFile\n      };\n\n      if (this.listType === 'picture-card' || this.listType === 'picture') {\n        try {\n          file.url = URL.createObjectURL(rawFile);\n        } catch (err) {\n          console.error('[Element Error][Upload]', err);\n          return;\n        }\n      }\n\n      this.uploadFiles.push(file);\n      this.onChange(file, this.uploadFiles);\n    },\n    handleProgress: function (ev, rawFile) {\n      var file = this.getFile(rawFile);\n      this.onProgress(ev, file, this.uploadFiles);\n      file.status = 'uploading';\n      file.percentage = ev.percent || 0;\n    },\n    handleSuccess: function (res, rawFile) {\n      var file = this.getFile(rawFile);\n\n      if (file) {\n        file.status = 'success';\n        file.response = res;\n        this.onSuccess(res, file, this.uploadFiles);\n        this.onChange(file, this.uploadFiles);\n      }\n    },\n    handleError: function (err, rawFile) {\n      var file = this.getFile(rawFile);\n      var fileList = this.uploadFiles;\n      file.status = 'fail';\n      fileList.splice(fileList.indexOf(file), 1);\n      this.onError(err, file, this.uploadFiles);\n      this.onChange(file, this.uploadFiles);\n    },\n    handleRemove: function (file, raw) {\n      var _this2 = this;\n\n      if (raw) {\n        file = this.getFile(raw);\n      }\n\n      var doRemove = function () {\n        _this2.abort(file);\n\n        var fileList = _this2.uploadFiles;\n        fileList.splice(fileList.indexOf(file), 1);\n\n        _this2.onRemove(file, fileList);\n      };\n\n      if (!this.beforeRemove) {\n        doRemove();\n      } else if (typeof this.beforeRemove === 'function') {\n        var before = this.beforeRemove(file, this.uploadFiles);\n\n        if (before && before.then) {\n          before.then(function () {\n            doRemove();\n          }, noop);\n        } else if (before !== false) {\n          doRemove();\n        }\n      }\n    },\n    getFile: function (rawFile) {\n      var fileList = this.uploadFiles;\n      var target;\n      fileList.every(function (item) {\n        target = rawFile.uid === item.uid ? item : null;\n        return !target;\n      });\n      return target;\n    },\n    abort: function (file) {\n      this.$refs['upload-inner'].abort(file);\n    },\n    clearFiles: function () {\n      this.uploadFiles = [];\n    },\n    submit: function () {\n      var _this3 = this;\n\n      this.uploadFiles.filter(function (file) {\n        return file.status === 'ready';\n      }).forEach(function (file) {\n        _this3.$refs['upload-inner'].upload(file.raw);\n      });\n    },\n    getMigratingConfig: function () {\n      return {\n        props: {\n          'default-file-list': 'default-file-list is renamed to file-list.',\n          'show-upload-list': 'show-upload-list is renamed to show-file-list.',\n          'thumbnail-mode': 'thumbnail-mode has been deprecated, you can implement the same effect according to this case: http://element.eleme.io/#/zh-CN/component/upload#yong-hu-tou-xiang-shang-chuan'\n        }\n      };\n    }\n  },\n  beforeDestroy: function () {\n    this.uploadFiles.forEach(function (file) {\n      if (file.url && file.url.indexOf('blob:') === 0) {\n        URL.revokeObjectURL(file.url);\n      }\n    });\n  },\n  render: function (h) {\n    var uploadList;\n\n    if (this.showFileList) {\n      uploadList = <UploadList disabled={this.uploadDisabled} listType={this.listType} files={this.uploadFiles} on-remove={this.handleRemove} handlePreview={this.onPreview}>\n        </UploadList>;\n    }\n\n    var uploadData = {\n      props: {\n        type: this.type,\n        drag: this.drag,\n        action: this.action,\n        multiple: this.multiple,\n        'before-upload': this.beforeUpload,\n        'with-credentials': this.withCredentials,\n        headers: this.headers,\n        name: this.name,\n        data: this.data,\n        accept: this.accept,\n        fileList: this.uploadFiles,\n        autoUpload: this.autoUpload,\n        listType: this.listType,\n        disabled: this.uploadDisabled,\n        limit: this.limit,\n        'on-exceed': this.onExceed,\n        'on-start': this.handleStart,\n        'on-progress': this.handleProgress,\n        'on-success': this.handleSuccess,\n        'on-error': this.handleError,\n        'on-preview': this.onPreview,\n        'on-remove': this.handleRemove,\n        'http-request': this.httpRequest\n      },\n      ref: 'upload-inner'\n    };\n    var trigger = this.$slots.trigger || this.$slots.default;\n    var uploadComponent = <upload {...uploadData}>{trigger}</upload>;\n    return <div>\n        {this.listType === 'picture-card' ? uploadList : ''}\n        {this.$slots.trigger ? [uploadComponent, this.$slots.default] : uploadComponent}\n        {this.$slots.tip}\n        {this.listType !== 'picture-card' ? uploadList : ''}\n      </div>;\n  }\n});","map":{"version":3,"sources":["/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/upload/src/index.vue"],"names":["UploadList","module","link","v","Upload","ElProgress","Migrating","noop","exportDefault","name","mixins","components","provide","uploader","inject","elForm","props","action","type","String","required","headers","Object","data","multiple","Boolean","drag","dragger","withCredentials","showFileList","accept","beforeUpload","Function","beforeRemove","onRemove","onChange","onPreview","onSuccess","onProgress","onError","fileList","Array","autoUpload","listType","httpRequest","disabled","limit","Number","onExceed","uploadFiles","dragOver","draging","tempIndex","computed","uploadDisabled","watch","immediate","handler","map","item","uid","Date","now","status","methods","handleStart","rawFile","file","size","percentage","raw","url","URL","createObjectURL","err","console","error","push","handleProgress","ev","getFile","percent","handleSuccess","res","response","handleError","splice","indexOf","handleRemove","doRemove","abort","before","then","target","every","$refs","clearFiles","submit","filter","forEach","upload","getMigratingConfig","beforeDestroy","revokeObjectURL","render","h","uploadList","uploadData","ref","trigger","$slots","default","uploadComponent","tip"],"mappings":"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","sourcesContent":["\nimport UploadList from './upload-list';\nimport Upload from './upload';\nimport ElProgress from 'element-ui/packages/progress';\nimport Migrating from 'element-ui/src/mixins/migrating';\n\nfunction noop() {}\n\nexport default {\n  name: 'ElUpload',\n\n  mixins: [Migrating],\n\n  components: {\n    ElProgress,\n    UploadList,\n    Upload\n  },\n\n  provide() {\n    return {\n      uploader: this\n    };\n  },\n\n  inject: {\n    elForm: {\n      default: ''\n    }\n  },\n\n  props: {\n    action: {\n      type: String,\n      required: true\n    },\n    headers: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    data: Object,\n    multiple: Boolean,\n    name: {\n      type: String,\n      default: 'file'\n    },\n    drag: Boolean,\n    dragger: Boolean,\n    withCredentials: Boolean,\n    showFileList: {\n      type: Boolean,\n      default: true\n    },\n    accept: String,\n    type: {\n      type: String,\n      default: 'select'\n    },\n    beforeUpload: Function,\n    beforeRemove: Function,\n    onRemove: {\n      type: Function,\n      default: noop\n    },\n    onChange: {\n      type: Function,\n      default: noop\n    },\n    onPreview: {\n      type: Function\n    },\n    onSuccess: {\n      type: Function,\n      default: noop\n    },\n    onProgress: {\n      type: Function,\n      default: noop\n    },\n    onError: {\n      type: Function,\n      default: noop\n    },\n    fileList: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    autoUpload: {\n      type: Boolean,\n      default: true\n    },\n    listType: {\n      type: String,\n      default: 'text' // text,picture,picture-card\n    },\n    httpRequest: Function,\n    disabled: Boolean,\n    limit: Number,\n    onExceed: {\n      type: Function,\n      default: noop\n    }\n  },\n\n  data() {\n    return {\n      uploadFiles: [],\n      dragOver: false,\n      draging: false,\n      tempIndex: 1\n    };\n  },\n\n  computed: {\n    uploadDisabled() {\n      return this.disabled || (this.elForm || {}).disabled;\n    }\n  },\n\n  watch: {\n    fileList: {\n      immediate: true,\n      handler(fileList) {\n        this.uploadFiles = fileList.map(item => {\n          item.uid = item.uid || (Date.now() + this.tempIndex++);\n          item.status = item.status || 'success';\n          return item;\n        });\n      }\n    }\n  },\n\n  methods: {\n    handleStart(rawFile) {\n      rawFile.uid = Date.now() + this.tempIndex++;\n      let file = {\n        status: 'ready',\n        name: rawFile.name,\n        size: rawFile.size,\n        percentage: 0,\n        uid: rawFile.uid,\n        raw: rawFile\n      };\n\n      if (this.listType === 'picture-card' || this.listType === 'picture') {\n        try {\n          file.url = URL.createObjectURL(rawFile);\n        } catch (err) {\n          console.error('[Element Error][Upload]', err);\n          return;\n        }\n      }\n\n      this.uploadFiles.push(file);\n      this.onChange(file, this.uploadFiles);\n    },\n    handleProgress(ev, rawFile) {\n      const file = this.getFile(rawFile);\n      this.onProgress(ev, file, this.uploadFiles);\n      file.status = 'uploading';\n      file.percentage = ev.percent || 0;\n    },\n    handleSuccess(res, rawFile) {\n      const file = this.getFile(rawFile);\n\n      if (file) {\n        file.status = 'success';\n        file.response = res;\n\n        this.onSuccess(res, file, this.uploadFiles);\n        this.onChange(file, this.uploadFiles);\n      }\n    },\n    handleError(err, rawFile) {\n      const file = this.getFile(rawFile);\n      const fileList = this.uploadFiles;\n\n      file.status = 'fail';\n\n      fileList.splice(fileList.indexOf(file), 1);\n\n      this.onError(err, file, this.uploadFiles);\n      this.onChange(file, this.uploadFiles);\n    },\n    handleRemove(file, raw) {\n      if (raw) {\n        file = this.getFile(raw);\n      }\n      let doRemove = () => {\n        this.abort(file);\n        let fileList = this.uploadFiles;\n        fileList.splice(fileList.indexOf(file), 1);\n        this.onRemove(file, fileList);\n      };\n\n      if (!this.beforeRemove) {\n        doRemove();\n      } else if (typeof this.beforeRemove === 'function') {\n        const before = this.beforeRemove(file, this.uploadFiles);\n        if (before && before.then) {\n          before.then(() => {\n            doRemove();\n          }, noop);\n        } else if (before !== false) {\n          doRemove();\n        }\n      }\n    },\n    getFile(rawFile) {\n      let fileList = this.uploadFiles;\n      let target;\n      fileList.every(item => {\n        target = rawFile.uid === item.uid ? item : null;\n        return !target;\n      });\n      return target;\n    },\n    abort(file) {\n      this.$refs['upload-inner'].abort(file);\n    },\n    clearFiles() {\n      this.uploadFiles = [];\n    },\n    submit() {\n      this.uploadFiles\n        .filter(file => file.status === 'ready')\n        .forEach(file => {\n          this.$refs['upload-inner'].upload(file.raw);\n        });\n    },\n    getMigratingConfig() {\n      return {\n        props: {\n          'default-file-list': 'default-file-list is renamed to file-list.',\n          'show-upload-list': 'show-upload-list is renamed to show-file-list.',\n          'thumbnail-mode': 'thumbnail-mode has been deprecated, you can implement the same effect according to this case: http://element.eleme.io/#/zh-CN/component/upload#yong-hu-tou-xiang-shang-chuan'\n        }\n      };\n    }\n  },\n\n  beforeDestroy() {\n    this.uploadFiles.forEach(file => {\n      if (file.url && file.url.indexOf('blob:') === 0) {\n        URL.revokeObjectURL(file.url);\n      }\n    });\n  },\n\n  render(h) {\n    let uploadList;\n\n    if (this.showFileList) {\n      uploadList = (\n        <UploadList\n          disabled={this.uploadDisabled}\n          listType={this.listType}\n          files={this.uploadFiles}\n          on-remove={this.handleRemove}\n          handlePreview={this.onPreview}>\n        </UploadList>\n      );\n    }\n\n    const uploadData = {\n      props: {\n        type: this.type,\n        drag: this.drag,\n        action: this.action,\n        multiple: this.multiple,\n        'before-upload': this.beforeUpload,\n        'with-credentials': this.withCredentials,\n        headers: this.headers,\n        name: this.name,\n        data: this.data,\n        accept: this.accept,\n        fileList: this.uploadFiles,\n        autoUpload: this.autoUpload,\n        listType: this.listType,\n        disabled: this.uploadDisabled,\n        limit: this.limit,\n        'on-exceed': this.onExceed,\n        'on-start': this.handleStart,\n        'on-progress': this.handleProgress,\n        'on-success': this.handleSuccess,\n        'on-error': this.handleError,\n        'on-preview': this.onPreview,\n        'on-remove': this.handleRemove,\n        'http-request': this.httpRequest\n      },\n      ref: 'upload-inner'\n    };\n\n    const trigger = this.$slots.trigger || this.$slots.default;\n    const uploadComponent = <upload {...uploadData}>{trigger}</upload>;\n\n    return (\n      <div>\n        { this.listType === 'picture-card' ? uploadList : ''}\n        {\n          this.$slots.trigger\n            ? [uploadComponent, this.$slots.default]\n            : uploadComponent\n        }\n        {this.$slots.tip}\n        { this.listType !== 'picture-card' ? uploadList : ''}\n      </div>\n    );\n  }\n};\n"]},"sourceType":"script","hash":"8e96cc792212c416d156a74728210cd12f6dd22b"}
