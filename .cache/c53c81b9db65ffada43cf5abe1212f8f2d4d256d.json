{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/tree/src/tree-node.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/tree/src/tree-node.vue","filename":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/tree/src/tree-node.vue","passPerPreset":false,"envName":"development","cwd":"/home/vy/Desktop/B.A.D/bad-system","root":"/home/vy/Desktop/B.A.D/bad-system","generatorOpts":{"filename":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/tree/src/tree-node.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/tree/src/tree-node.vue"}},"code":"var ElCollapseTransition;\nmodule.link(\"element-ui/src/transitions/collapse-transition\", {\n  \"default\": function (v) {\n    ElCollapseTransition = v;\n  }\n}, 0);\nvar ElCheckbox;\nmodule.link(\"element-ui/packages/checkbox\", {\n  \"default\": function (v) {\n    ElCheckbox = v;\n  }\n}, 1);\nvar emitter;\nmodule.link(\"element-ui/src/mixins/emitter\", {\n  \"default\": function (v) {\n    emitter = v;\n  }\n}, 2);\nvar getNodeKey;\nmodule.link(\"./model/util\", {\n  getNodeKey: function (v) {\n    getNodeKey = v;\n  }\n}, 3);\nmodule.exportDefault({\n  name: 'ElTreeNode',\n  componentName: 'ElTreeNode',\n  mixins: [emitter],\n  props: {\n    node: {\n      \"default\": function () {\n        return {};\n      }\n    },\n    props: {},\n    renderContent: Function,\n    renderAfterExpand: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  components: {\n    ElCollapseTransition: ElCollapseTransition,\n    ElCheckbox: ElCheckbox,\n    NodeContent: {\n      props: {\n        node: {\n          required: true\n        }\n      },\n      render: function (h) {\n        var parent = this.$parent;\n        var tree = parent.tree;\n        var node = this.node;\n        var data = node.data,\n            store = node.store;\n        return parent.renderContent ? parent.renderContent.call(parent._renderProxy, h, {\n          _self: tree.$vnode.context,\n          node: node,\n          data: data,\n          store: store\n        }) : tree.$scopedSlots.default ? tree.$scopedSlots.default({\n          node: node,\n          data: data\n        }) : <span class=\"el-tree-node__label\">{node.label}</span>;\n      }\n    }\n  },\n  data: function () {\n    return {\n      tree: null,\n      expanded: false,\n      childNodeRendered: false,\n      showCheckbox: false,\n      oldChecked: null,\n      oldIndeterminate: null\n    };\n  },\n  watch: {\n    'node.indeterminate': function (val) {\n      this.handleSelectChange(this.node.checked, val);\n    },\n    'node.checked': function (val) {\n      this.handleSelectChange(val, this.node.indeterminate);\n    },\n    'node.expanded': function (val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        return _this.expanded = val;\n      });\n\n      if (val) {\n        this.childNodeRendered = true;\n      }\n    }\n  },\n  methods: {\n    getNodeKey: function (node) {\n      return getNodeKey(this.tree.nodeKey, node.data);\n    },\n    handleSelectChange: function (checked, indeterminate) {\n      if (this.oldChecked !== checked && this.oldIndeterminate !== indeterminate) {\n        this.tree.$emit('check-change', this.node.data, checked, indeterminate);\n      }\n\n      this.oldChecked = checked;\n      this.indeterminate = indeterminate;\n    },\n    handleClick: function () {\n      var store = this.tree.store;\n      store.setCurrentNode(this.node);\n      this.tree.$emit('current-change', store.currentNode ? store.currentNode.data : null, store.currentNode);\n      this.tree.currentNode = this;\n\n      if (this.tree.expandOnClickNode) {\n        this.handleExpandIconClick();\n      }\n\n      if (this.tree.checkOnClickNode && !this.node.disabled) {\n        this.handleCheckChange(null, {\n          target: {\n            checked: !this.node.checked\n          }\n        });\n      }\n\n      this.tree.$emit('node-click', this.node.data, this.node, this);\n    },\n    handleContextMenu: function (event) {\n      if (this.tree._events['node-contextmenu'] && this.tree._events['node-contextmenu'].length > 0) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      this.tree.$emit('node-contextmenu', event, this.node.data, this.node, this);\n    },\n    handleExpandIconClick: function () {\n      if (this.node.isLeaf) return;\n\n      if (this.expanded) {\n        this.tree.$emit('node-collapse', this.node.data, this.node, this);\n        this.node.collapse();\n      } else {\n        this.node.expand();\n        this.$emit('node-expand', this.node.data, this.node, this);\n      }\n    },\n    handleCheckChange: function (value, ev) {\n      var _this2 = this;\n\n      this.node.setChecked(ev.target.checked, !this.tree.checkStrictly);\n      this.$nextTick(function () {\n        var store = _this2.tree.store;\n\n        _this2.tree.$emit('check', _this2.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    },\n    handleChildNodeExpand: function (nodeData, node, instance) {\n      this.broadcast('ElTreeNode', 'tree-node-expand', node);\n      this.tree.$emit('node-expand', nodeData, node, instance);\n    },\n    handleDragStart: function (event) {\n      if (!this.tree.draggable) return;\n      this.tree.$emit('tree-node-drag-start', event, this);\n    },\n    handleDragOver: function (event) {\n      if (!this.tree.draggable) return;\n      this.tree.$emit('tree-node-drag-over', event, this);\n      event.preventDefault();\n    },\n    handleDrop: function (event) {\n      event.preventDefault();\n    },\n    handleDragEnd: function (event) {\n      if (!this.tree.draggable) return;\n      this.tree.$emit('tree-node-drag-end', event, this);\n    }\n  },\n  created: function () {\n    var _this3 = this;\n\n    var parent = this.$parent;\n\n    if (parent.isTree) {\n      this.tree = parent;\n    } else {\n      this.tree = parent.tree;\n    }\n\n    var tree = this.tree;\n\n    if (!tree) {\n      console.warn('Can not find node\\'s tree.');\n    }\n\n    var props = tree.props || {};\n    var childrenKey = props['children'] || 'children';\n    this.$watch(\"node.data.\" + childrenKey, function () {\n      _this3.node.updateChildren();\n    });\n    this.showCheckbox = tree.showCheckbox;\n\n    if (this.node.expanded) {\n      this.expanded = true;\n      this.childNodeRendered = true;\n    }\n\n    if (this.tree.accordion) {\n      this.$on('tree-node-expand', function (node) {\n        if (_this3.node !== node) {\n          _this3.node.collapse();\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/home/vy/Desktop/B.A.D/bad-system/node_modules/element-ui/packages/tree/src/tree-node.vue"],"names":["ElCollapseTransition","module","link","v","ElCheckbox","emitter","getNodeKey","exportDefault","name","componentName","mixins","props","node","renderContent","Function","renderAfterExpand","type","Boolean","components","NodeContent","required","render","h","parent","$parent","tree","data","store","call","_renderProxy","_self","$vnode","context","$scopedSlots","default","label","expanded","childNodeRendered","showCheckbox","oldChecked","oldIndeterminate","watch","val","handleSelectChange","checked","indeterminate","$nextTick","methods","nodeKey","$emit","handleClick","setCurrentNode","currentNode","expandOnClickNode","handleExpandIconClick","checkOnClickNode","disabled","handleCheckChange","target","handleContextMenu","event","_events","length","stopPropagation","preventDefault","isLeaf","collapse","expand","value","ev","setChecked","checkStrictly","checkedNodes","getCheckedNodes","checkedKeys","getCheckedKeys","halfCheckedNodes","getHalfCheckedNodes","halfCheckedKeys","getHalfCheckedKeys","handleChildNodeExpand","nodeData","instance","broadcast","handleDragStart","draggable","handleDragOver","handleDrop","handleDragEnd","created","isTree","console","warn","childrenKey","$watch","updateChildren","accordion","$on"],"mappings":"AAAA,IAAIA,oBAAJ;AAAyBC,MAAM,CAACC,IAAP,CAAY,gDAAZ,EAA6D;AAAA,uBAASC,CAAT,EAAW;AAACH,IAAAA,oBAAoB,GAACG,CAArB;AAAuB;AAAnC,CAA7D,EAAkG,CAAlG;AAAqG,IAAIC,UAAJ;AAAeH,MAAM,CAACC,IAAP,CAAY,8BAAZ,EAA2C;AAAA,uBAASC,CAAT,EAAW;AAACC,IAAAA,UAAU,GAACD,CAAX;AAAa;AAAzB,CAA3C,EAAsE,CAAtE;AAAyE,IAAIE,OAAJ;AAAYJ,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAAA,uBAASC,CAAT,EAAW;AAACE,IAAAA,OAAO,GAACF,CAAR;AAAU;AAAtB,CAA5C,EAAoE,CAApE;AAAuE,IAAIG,UAAJ;AAAeL,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACI,EAAAA,UAAD,YAAYH,CAAZ,EAAc;AAACG,IAAAA,UAAU,GAACH,CAAX;AAAa;AAA5B,CAA3B,EAAyD,CAAzD;AAAxTF,MAAM,CAACM,aAAP,CA8EiB;AACbC,EAAAA,IAAI,EAAE,YADO;AAGbC,EAAAA,aAAa,EAAE,YAHF;AAKbC,EAAAA,MAAM,EAAE,CAACL,OAAD,CALK;AAObM,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AAAA,6BACM;AACR,eAAO,EAAP;AACD;AAHG,KADD;AAMLD,IAAAA,KAAK,EAAE,EANF;AAOLE,IAAAA,aAAa,EAAEC,QAPV;AAQLC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,IAAI,EAAEC,OADW;AAEjB,iBAAS;AAFQ;AARd,GAPM;AAqBbC,EAAAA,UAAU,EAAE;AACVlB,IAAAA,oBAAoB,EAApBA,oBADU;AAEVI,IAAAA,UAAU,EAAVA,UAFU;AAGVe,IAAAA,WAAW,EAAE;AACXR,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AACJQ,UAAAA,QAAQ,EAAE;AADN;AADD,OADI;AAMXC,MAAAA,MANW,YAMJC,CANI,EAMD;AACR,YAAMC,MAAM,GAAG,KAAKC,OAApB;AACA,YAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,YAAMb,IAAI,GAAG,KAAKA,IAAlB;AAHQ,YAIAc,IAJA,GAIgBd,IAJhB,CAIAc,IAJA;AAAA,YAIMC,KAJN,GAIgBf,IAJhB,CAIMe,KAJN;AAKR,eACEJ,MAAM,CAACV,aAAP,GACIU,MAAM,CAACV,aAAP,CAAqBe,IAArB,CAA0BL,MAAM,CAACM,YAAjC,EAA+CP,CAA/C,EAAkD;AAAEQ,UAAAA,KAAK,EAAEL,IAAI,CAACM,MAAL,CAAYC,OAArB;AAA8BpB,UAAAA,IAAI,EAAJA,IAA9B;AAAoCc,UAAAA,IAAI,EAAJA,IAApC;AAA0CC,UAAAA,KAAK,EAALA;AAA1C,SAAlD,CADJ,GAEIF,IAAI,CAACQ,YAAL,CAAkBC,OAAlB,GACET,IAAI,CAACQ,YAAL,CAAkBC,OAAlB,CAA0B;AAAEtB,UAAAA,IAAI,EAAJA,IAAF;AAAQc,UAAAA,IAAI,EAAJA;AAAR,SAA1B,CADF,GAEE,CAAC,IAAD,CAAM,MAAM,qBAAZ,CAAkC,CAAEd,IAAI,CAACuB,KAAP,CAAc,EAAE,IAAF,CALxD;AAOD;AAlBU;AAHH,GArBC;AA8CbT,EAAAA,IA9Ca,cA8CN;AACL,WAAO;AACLD,MAAAA,IAAI,EAAE,IADD;AAELW,MAAAA,QAAQ,EAAE,KAFL;AAGLC,MAAAA,iBAAiB,EAAE,KAHd;AAILC,MAAAA,YAAY,EAAE,KAJT;AAKLC,MAAAA,UAAU,EAAE,IALP;AAMLC,MAAAA,gBAAgB,EAAE;AANb,KAAP;AAQD,GAvDY;AAyDbC,EAAAA,KAAK,EAAE;AACL,wBADK,YACgBC,GADhB,EACqB;AACxB,WAAKC,kBAAL,CAAwB,KAAK/B,IAAL,CAAUgC,OAAlC,EAA2CF,GAA3C;AACD,KAHI;AAKL,kBALK,YAKUA,GALV,EAKe;AAClB,WAAKC,kBAAL,CAAwBD,GAAxB,EAA6B,KAAK9B,IAAL,CAAUiC,aAAvC;AACD,KAPI;AASL,mBATK,YASWH,GATX,EASgB;AAAA;;AACnB,WAAKI,SAAL,CAAe;AAAA,eAAM,KAAI,CAACV,QAAL,GAAgBM,GAAtB;AAAA,OAAf;;AACA,UAAIA,GAAJ,EAAS;AACP,aAAKL,iBAAL,GAAyB,IAAzB;AACD;AACF;AAdI,GAzDM;AA0EbU,EAAAA,OAAO,EAAE;AACPzC,IAAAA,UADO,YACIM,IADJ,EACU;AACf,aAAON,UAAU,CAAC,KAAKmB,IAAL,CAAUuB,OAAX,EAAoBpC,IAAI,CAACc,IAAzB,CAAjB;AACD,KAHM;AAKPiB,IAAAA,kBALO,YAKYC,OALZ,EAKqBC,aALrB,EAKoC;AACzC,UAAI,KAAKN,UAAL,KAAoBK,OAApB,IAA+B,KAAKJ,gBAAL,KAA0BK,aAA7D,EAA4E;AAC1E,aAAKpB,IAAL,CAAUwB,KAAV,CAAgB,cAAhB,EAAgC,KAAKrC,IAAL,CAAUc,IAA1C,EAAgDkB,OAAhD,EAAyDC,aAAzD;AACD;;AACD,WAAKN,UAAL,GAAkBK,OAAlB;AACA,WAAKC,aAAL,GAAqBA,aAArB;AACD,KAXM;AAaPK,IAAAA,WAbO,cAaO;AACZ,UAAMvB,KAAK,GAAG,KAAKF,IAAL,CAAUE,KAAxB;AACAA,MAAAA,KAAK,CAACwB,cAAN,CAAqB,KAAKvC,IAA1B;AACA,WAAKa,IAAL,CAAUwB,KAAV,CAAgB,gBAAhB,EAAkCtB,KAAK,CAACyB,WAAN,GAAoBzB,KAAK,CAACyB,WAAN,CAAkB1B,IAAtC,GAA6C,IAA/E,EAAqFC,KAAK,CAACyB,WAA3F;AACA,WAAK3B,IAAL,CAAU2B,WAAV,GAAwB,IAAxB;;AACA,UAAI,KAAK3B,IAAL,CAAU4B,iBAAd,EAAiC;AAC/B,aAAKC,qBAAL;AACD;;AACD,UAAI,KAAK7B,IAAL,CAAU8B,gBAAV,IAA8B,CAAC,KAAK3C,IAAL,CAAU4C,QAA7C,EAAuD;AACrD,aAAKC,iBAAL,CAAuB,IAAvB,EAA6B;AAC3BC,UAAAA,MAAM,EAAE;AAAEd,YAAAA,OAAO,EAAE,CAAC,KAAKhC,IAAL,CAAUgC;AAAtB;AADmB,SAA7B;AAGD;;AACD,WAAKnB,IAAL,CAAUwB,KAAV,CAAgB,YAAhB,EAA8B,KAAKrC,IAAL,CAAUc,IAAxC,EAA8C,KAAKd,IAAnD,EAAyD,IAAzD;AACD,KA3BM;AA6BP+C,IAAAA,iBA7BO,YA6BWC,KA7BX,EA6BkB;AACvB,UAAI,KAAKnC,IAAL,CAAUoC,OAAV,CAAkB,kBAAlB,KAAyC,KAAKpC,IAAL,CAAUoC,OAAV,CAAkB,kBAAlB,EAAsCC,MAAtC,GAA+C,CAA5F,EAA+F;AAC7FF,QAAAA,KAAK,CAACG,eAAN;AACAH,QAAAA,KAAK,CAACI,cAAN;AACD;;AACD,WAAKvC,IAAL,CAAUwB,KAAV,CAAgB,kBAAhB,EAAoCW,KAApC,EAA2C,KAAKhD,IAAL,CAAUc,IAArD,EAA2D,KAAKd,IAAhE,EAAsE,IAAtE;AACD,KAnCM;AAqCP0C,IAAAA,qBArCO,cAqCiB;AACtB,UAAI,KAAK1C,IAAL,CAAUqD,MAAd,EAAsB;;AACtB,UAAI,KAAK7B,QAAT,EAAmB;AACjB,aAAKX,IAAL,CAAUwB,KAAV,CAAgB,eAAhB,EAAiC,KAAKrC,IAAL,CAAUc,IAA3C,EAAiD,KAAKd,IAAtD,EAA4D,IAA5D;AACA,aAAKA,IAAL,CAAUsD,QAAV;AACD,OAHD,MAGO;AACL,aAAKtD,IAAL,CAAUuD,MAAV;AACA,aAAKlB,KAAL,CAAW,aAAX,EAA0B,KAAKrC,IAAL,CAAUc,IAApC,EAA0C,KAAKd,IAA/C,EAAqD,IAArD;AACD;AACF,KA9CM;AAgDP6C,IAAAA,iBAhDO,YAgDWW,KAhDX,EAgDkBC,EAhDlB,EAgDsB;AAAA;;AAC3B,WAAKzD,IAAL,CAAU0D,UAAV,CAAqBD,EAAE,CAACX,MAAH,CAAUd,OAA/B,EAAwC,CAAC,KAAKnB,IAAL,CAAU8C,aAAnD;AACA,WAAKzB,SAAL,CAAe,YAAM;AACnB,YAAMnB,KAAK,GAAG,MAAI,CAACF,IAAL,CAAUE,KAAxB;;AACA,QAAA,MAAI,CAACF,IAAL,CAAUwB,KAAV,CAAgB,OAAhB,EAAyB,MAAI,CAACrC,IAAL,CAAUc,IAAnC,EAAyC;AACvC8C,UAAAA,YAAY,EAAE7C,KAAK,CAAC8C,eAAN,EADyB;AAEvCC,UAAAA,WAAW,EAAE/C,KAAK,CAACgD,cAAN,EAF0B;AAGvCC,UAAAA,gBAAgB,EAAEjD,KAAK,CAACkD,mBAAN,EAHqB;AAIvCC,UAAAA,eAAe,EAAEnD,KAAK,CAACoD,kBAAN;AAJsB,SAAzC;AAMD,OARD;AASD,KA3DM;AA6DPC,IAAAA,qBA7DO,YA6DeC,QA7Df,EA6DyBrE,IA7DzB,EA6D+BsE,QA7D/B,EA6DyC;AAC9C,WAAKC,SAAL,CAAe,YAAf,EAA6B,kBAA7B,EAAiDvE,IAAjD;AACA,WAAKa,IAAL,CAAUwB,KAAV,CAAgB,aAAhB,EAA+BgC,QAA/B,EAAyCrE,IAAzC,EAA+CsE,QAA/C;AACD,KAhEM;AAkEPE,IAAAA,eAlEO,YAkESxB,KAlET,EAkEgB;AACrB,UAAI,CAAC,KAAKnC,IAAL,CAAU4D,SAAf,EAA0B;AAC1B,WAAK5D,IAAL,CAAUwB,KAAV,CAAgB,sBAAhB,EAAwCW,KAAxC,EAA+C,IAA/C;AACD,KArEM;AAuEP0B,IAAAA,cAvEO,YAuEQ1B,KAvER,EAuEe;AACpB,UAAI,CAAC,KAAKnC,IAAL,CAAU4D,SAAf,EAA0B;AAC1B,WAAK5D,IAAL,CAAUwB,KAAV,CAAgB,qBAAhB,EAAuCW,KAAvC,EAA8C,IAA9C;AACAA,MAAAA,KAAK,CAACI,cAAN;AACD,KA3EM;AA6EPuB,IAAAA,UA7EO,YA6EI3B,KA7EJ,EA6EW;AAChBA,MAAAA,KAAK,CAACI,cAAN;AACD,KA/EM;AAiFPwB,IAAAA,aAjFO,YAiFO5B,KAjFP,EAiFc;AACnB,UAAI,CAAC,KAAKnC,IAAL,CAAU4D,SAAf,EAA0B;AAC1B,WAAK5D,IAAL,CAAUwB,KAAV,CAAgB,oBAAhB,EAAsCW,KAAtC,EAA6C,IAA7C;AACD;AApFM,GA1EI;AAiKb6B,EAAAA,OAjKa,cAiKH;AAAA;;AACR,QAAMlE,MAAM,GAAG,KAAKC,OAApB;;AAEA,QAAID,MAAM,CAACmE,MAAX,EAAmB;AACjB,WAAKjE,IAAL,GAAYF,MAAZ;AACD,KAFD,MAEO;AACL,WAAKE,IAAL,GAAYF,MAAM,CAACE,IAAnB;AACD;;AAED,QAAMA,IAAI,GAAG,KAAKA,IAAlB;;AACA,QAAI,CAACA,IAAL,EAAW;AACTkE,MAAAA,OAAO,CAACC,IAAR,CAAa,4BAAb;AACD;;AAED,QAAMjF,KAAK,GAAGc,IAAI,CAACd,KAAL,IAAc,EAA5B;AACA,QAAMkF,WAAW,GAAGlF,KAAK,CAAC,UAAD,CAAL,IAAqB,UAAzC;AAEA,SAAKmF,MAAL,gBAAyBD,WAAzB,EAAwC,YAAM;AAC5C,MAAA,MAAI,CAACjF,IAAL,CAAUmF,cAAV;AACD,KAFD;AAIA,SAAKzD,YAAL,GAAoBb,IAAI,CAACa,YAAzB;;AAEA,QAAI,KAAK1B,IAAL,CAAUwB,QAAd,EAAwB;AACtB,WAAKA,QAAL,GAAgB,IAAhB;AACA,WAAKC,iBAAL,GAAyB,IAAzB;AACD;;AAED,QAAG,KAAKZ,IAAL,CAAUuE,SAAb,EAAwB;AACtB,WAAKC,GAAL,CAAS,kBAAT,EAA6B,UAAArF,IAAI,EAAI;AACnC,YAAG,MAAI,CAACA,IAAL,KAAcA,IAAjB,EAAuB;AACrB,UAAA,MAAI,CAACA,IAAL,CAAUsD,QAAV;AACD;AACF,OAJD;AAKD;AACF;AApMY,CA9EjB","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import ElCollapseTransition from 'element-ui/src/transitions/collapse-transition';\n  import ElCheckbox from 'element-ui/packages/checkbox';\n  import emitter from 'element-ui/src/mixins/emitter';\n  import { getNodeKey } from './model/util';\n\n  export default {\n    name: 'ElTreeNode',\n\n    componentName: 'ElTreeNode',\n\n    mixins: [emitter],\n\n    props: {\n      node: {\n        default() {\n          return {};\n        }\n      },\n      props: {},\n      renderContent: Function,\n      renderAfterExpand: {\n        type: Boolean,\n        default: true\n      }\n    },\n\n    components: {\n      ElCollapseTransition,\n      ElCheckbox,\n      NodeContent: {\n        props: {\n          node: {\n            required: true\n          }\n        },\n        render(h) {\n          const parent = this.$parent;\n          const tree = parent.tree;\n          const node = this.node;\n          const { data, store } = node;\n          return (\n            parent.renderContent\n              ? parent.renderContent.call(parent._renderProxy, h, { _self: tree.$vnode.context, node, data, store })\n              : tree.$scopedSlots.default\n                ? tree.$scopedSlots.default({ node, data })\n                : <span class=\"el-tree-node__label\">{ node.label }</span>\n          );\n        }\n      }\n    },\n\n    data() {\n      return {\n        tree: null,\n        expanded: false,\n        childNodeRendered: false,\n        showCheckbox: false,\n        oldChecked: null,\n        oldIndeterminate: null\n      };\n    },\n\n    watch: {\n      'node.indeterminate'(val) {\n        this.handleSelectChange(this.node.checked, val);\n      },\n\n      'node.checked'(val) {\n        this.handleSelectChange(val, this.node.indeterminate);\n      },\n\n      'node.expanded'(val) {\n        this.$nextTick(() => this.expanded = val);\n        if (val) {\n          this.childNodeRendered = true;\n        }\n      }\n    },\n\n    methods: {\n      getNodeKey(node) {\n        return getNodeKey(this.tree.nodeKey, node.data);\n      },\n\n      handleSelectChange(checked, indeterminate) {\n        if (this.oldChecked !== checked && this.oldIndeterminate !== indeterminate) {\n          this.tree.$emit('check-change', this.node.data, checked, indeterminate);\n        }\n        this.oldChecked = checked;\n        this.indeterminate = indeterminate;\n      },\n\n      handleClick() {\n        const store = this.tree.store;\n        store.setCurrentNode(this.node);\n        this.tree.$emit('current-change', store.currentNode ? store.currentNode.data : null, store.currentNode);\n        this.tree.currentNode = this;\n        if (this.tree.expandOnClickNode) {\n          this.handleExpandIconClick();\n        }\n        if (this.tree.checkOnClickNode && !this.node.disabled) {\n          this.handleCheckChange(null, {\n            target: { checked: !this.node.checked }\n          });\n        }\n        this.tree.$emit('node-click', this.node.data, this.node, this);\n      },\n\n      handleContextMenu(event) {\n        if (this.tree._events['node-contextmenu'] && this.tree._events['node-contextmenu'].length > 0) {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n        this.tree.$emit('node-contextmenu', event, this.node.data, this.node, this);\n      },\n\n      handleExpandIconClick() {\n        if (this.node.isLeaf) return;\n        if (this.expanded) {\n          this.tree.$emit('node-collapse', this.node.data, this.node, this);\n          this.node.collapse();\n        } else {\n          this.node.expand();\n          this.$emit('node-expand', this.node.data, this.node, this);\n        }\n      },\n\n      handleCheckChange(value, ev) {\n        this.node.setChecked(ev.target.checked, !this.tree.checkStrictly);\n        this.$nextTick(() => {\n          const store = this.tree.store;\n          this.tree.$emit('check', this.node.data, {\n            checkedNodes: store.getCheckedNodes(),\n            checkedKeys: store.getCheckedKeys(),\n            halfCheckedNodes: store.getHalfCheckedNodes(),\n            halfCheckedKeys: store.getHalfCheckedKeys(),\n          });\n        });\n      },\n\n      handleChildNodeExpand(nodeData, node, instance) {\n        this.broadcast('ElTreeNode', 'tree-node-expand', node);\n        this.tree.$emit('node-expand', nodeData, node, instance);\n      },\n\n      handleDragStart(event) {\n        if (!this.tree.draggable) return;\n        this.tree.$emit('tree-node-drag-start', event, this);\n      },\n\n      handleDragOver(event) {\n        if (!this.tree.draggable) return;\n        this.tree.$emit('tree-node-drag-over', event, this);\n        event.preventDefault();\n      },\n\n      handleDrop(event) {\n        event.preventDefault();\n      },\n\n      handleDragEnd(event) {\n        if (!this.tree.draggable) return;\n        this.tree.$emit('tree-node-drag-end', event, this);\n      }\n    },\n\n    created() {\n      const parent = this.$parent;\n\n      if (parent.isTree) {\n        this.tree = parent;\n      } else {\n        this.tree = parent.tree;\n      }\n\n      const tree = this.tree;\n      if (!tree) {\n        console.warn('Can not find node\\'s tree.');\n      }\n\n      const props = tree.props || {};\n      const childrenKey = props['children'] || 'children';\n\n      this.$watch(`node.data.${childrenKey}`, () => {\n        this.node.updateChildren();\n      });\n\n      this.showCheckbox = tree.showCheckbox;\n\n      if (this.node.expanded) {\n        this.expanded = true;\n        this.childNodeRendered = true;\n      }\n\n      if(this.tree.accordion) {\n        this.$on('tree-node-expand', node => {\n          if(this.node !== node) {\n            this.node.collapse();\n          }\n        });\n      }\n    }\n  };\n"]},"sourceType":"script","hash":"c53c81b9db65ffada43cf5abe1212f8f2d4d256d"}
