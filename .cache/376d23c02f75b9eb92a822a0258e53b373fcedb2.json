{"metadata":{},"options":{"plugins":[{"key":"/Users/rabbit/Desktop/app/bad-system/node_modules/babel-plugin-transform-vue-jsx/index.js","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterInsert.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterInsert.vue","filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterInsert.vue","passPerPreset":false,"envName":"development","cwd":"/Users/rabbit/Desktop/app/bad-system","root":"/Users/rabbit/Desktop/app/bad-system","generatorOpts":{"filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterInsert.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterInsert.vue"}},"code":"var _;\n\nmodule.link(\"lodash\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 0);\nvar Notify;\nmodule.link(\"/imports/client/lib/notify\", {\n  \"default\": function (v) {\n    Notify = v;\n  }\n}, 1);\nvar Msg;\nmodule.link(\"/imports/client/lib/message\", {\n  \"default\": function (v) {\n    Msg = v;\n  }\n}, 2);\nvar wrapCurrentTime;\nmodule.link(\"/imports/client/lib/wrap-current-time\", {\n  \"default\": function (v) {\n    wrapCurrentTime = v;\n  }\n}, 3);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 4);\nvar Lookup;\nmodule.link(\"/imports/client/lib/Lookup-Value\", {\n  \"default\": function (v) {\n    Lookup = v;\n  }\n}, 5);\nvar getNextRef;\nmodule.link(\"/imports/utils/get-next-ref\", {\n  getNextRef: function (v) {\n    getNextRef = v;\n  }\n}, 6);\nvar insertPayementForNew, findPaymentForClass, findOnePaymentByCode;\nmodule.link(\"/imports/modules/school/api/payment/methods\", {\n  insertPayementForNew: function (v) {\n    insertPayementForNew = v;\n  },\n  findPaymentForClass: function (v) {\n    findPaymentForClass = v;\n  },\n  findOnePaymentByCode: function (v) {\n    findOnePaymentByCode = v;\n  }\n}, 7);\nvar findExchanges;\nmodule.link(\"/imports/api/exchanges/methods.js\", {\n  findExchanges: function (v) {\n    findExchanges = v;\n  }\n}, 8);\n\nvar numeral = require('numeral');\n\nmodule.exportDefault({\n  // name: 'RegisterInsert',\n  props: {\n    visible: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function () {\n    // Check Code\n    var validateCode = function (rule, value, callback) {\n      if (!value) {\n        return callback(new Error('Code is requiered'));\n      }\n\n      setTimeout(function () {\n        var selector = {\n          receiptCode: value\n        };\n        findOnePaymentByCode.callPromise({\n          selector: selector\n        }).then(function (result) {\n          if (result) {\n            callback(new Error('This code is exist'));\n          } else {\n            callback();\n          }\n        }).catch(function (error) {\n          Notify.error({\n            message: error\n          });\n        });\n      }, 1000);\n    };\n\n    return {\n      loading: false,\n      refNumLoading: 'eg. 1',\n      checkRadio: 'New',\n      typeOpts: Lookup.type,\n      classIdOpts: [],\n      genderOpts: Lookup.gender,\n      studentIdOpts: [],\n      listExpireStudent: [],\n      exchangeRate: 0,\n      remaining: 0,\n      type: '',\n      checkBaseOn: 'usd',\n      form: {\n        receiptCode: '',\n        fee: 0,\n        type: '',\n        classId: '',\n        rsDate: moment().toDate(),\n        studentId: '',\n        payDate: moment().toDate(),\n        duration: 1,\n        totalPay: 0,\n        usd: 0,\n        discountVal: 0,\n        khr: 0,\n        remaining: 0,\n        status: 'Paid'\n      },\n      rules: {\n        receiptCode: [{\n          validator: validateCode,\n          trigger: 'change'\n        }],\n        rsDate: [{\n          required: true,\n          message: 'Date is Required',\n          trigger: 'change'\n        }],\n        type: [{\n          required: true,\n          message: 'Type is Required',\n          trigger: 'change'\n        }],\n        classId: [{\n          required: true,\n          message: 'Class is Required',\n          trigger: 'change'\n        }],\n        studentId: [{\n          required: true,\n          message: 'Student ID is required',\n          trigger: 'change'\n        }],\n        fee: [{\n          required: true,\n          message: 'Fee is Required',\n          trigger: 'change'\n        }],\n        payDate: [{\n          required: true,\n          message: 'Date is Required',\n          trigger: 'change'\n        }],\n        duration: [{\n          required: true,\n          message: 'Duration is required'\n        }, {\n          type: 'number',\n          message: 'Duration must be a number'\n        }],\n        usd: [{\n          required: true,\n          message: 'Total is required'\n        }],\n        khr: [{\n          required: true,\n          message: 'Total is required'\n        }],\n        totalPay: [{\n          required: true,\n          message: 'Total must be a number'\n        }]\n      }\n    };\n  },\n  watch: {\n    'form.duration': function (val) {\n      this.form.totalPay = val * this.form.fee;\n    },\n    'form.fee': function (val) {\n      this.form.totalPay = val * this.form.duration;\n    }\n  },\n  mounted: function () {\n    this.getExchangeRate();\n    this.getNextRefNum();\n  },\n  methods: {\n    getNextRefNum: function () {\n      var _this = this;\n\n      this.refNumLoading = 'Loading....';\n      getNextRef.callPromise({\n        collectionName: 'payment',\n        opts: {\n          field: 'receiptCode',\n          // selector: {},\n          paddingType: 'start',\n          paddingLength: 5,\n          paddingChar: '0',\n          prefix: ''\n        }\n      }).then(function (result) {\n        if (result) {\n          _this.form.receiptCode = result;\n        }\n      }).catch(function (error) {\n        _this.refNumLoading = 'eg. 1';\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    handleTypeChange: function (val) {\n      var _this2 = this;\n\n      if (val) {\n        this.type = val;\n        var selector = {\n          type: val,\n          status: 'Active'\n        };\n        lookupClass.callPromise({\n          selector: selector\n        }).then(function (result) {\n          _this2.classIdOpts = result;\n        }).catch(function (error) {\n          Notify.error({\n            message: error\n          });\n        });\n        this.getStudentData(val);\n      } else {\n        this.form.classId = '';\n        this.classIdOpts = [];\n      }\n    },\n    handleBaseOnChange: function (val) {\n      console.log(val);\n    },\n    getExchangeRate: function () {\n      var _this3 = this;\n\n      this.exchangeRate = 0;\n      findExchanges.callPromise({}).then(function (result) {\n        if (result.length > 0) {\n          _this3.exchangeRate = result[0].khr;\n        } else {\n          _this3.exchangeRate = 0;\n        }\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    getStudentData: function (val) {\n      var _this4 = this;\n\n      var selector = {\n        type: val,\n        remove: false\n      };\n      lookupStudent.callPromise({\n        selector: selector\n      }).then(function (result) {\n        _this4.studentIdOpts = result;\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    handleSave: function () {\n      var _this5 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          _this5.form.rsDate = wrapCurrentTime(_this5.form.rsDate);\n          _this5.form.dob = wrapCurrentTime(_this5.form.dob);\n          _this5.form.tranDate = wrapCurrentTime(moment().toDate());\n          _this5.form.payDate = wrapCurrentTime(_this5.form.payDate);\n          _this5.form.endPayDate = wrapCurrentTime(moment(_this5.form.payDate).add(_this5.form.duration, 'months'));\n\n          if (_this5.form.remaining != 0) {\n            _this5.form.status = 'Debt';\n          }\n\n          var recieveKhr = _this5.form.khr / _this5.exchangeRate;\n          isNaN(recieveKhr) == true ? recieveKhr = 0 : recieveKhr = recieveKhr;\n          var totalRecieve = _this5.form.usd + recieveKhr + _this5.form.discountVal;\n          var doc = {\n            receiptCode: _this5.form.receiptCode,\n            tranDate: _this5.form.tranDate,\n            classId: _this5.form.classId,\n            studentId: _this5.form.studentId,\n            refType: 'New',\n            payDate: _this5.form.payDate,\n            duration: _this5.form.duration,\n            endPayDate: _this5.form.endPayDate,\n            usd: _this5.form.usd,\n            discountVal: _this5.form.discountVal,\n            totalPay: _this5.form.totalPay,\n            khr: _this5.form.khr,\n            remaining: _this5.form.remaining,\n            status: _this5.form.status,\n            type: _this5.form.type,\n            fee: parseInt(_this5.form.fee),\n            totalRecieve: totalRecieve\n          };\n          insertPayementForNew.callPromise({\n            doc: doc\n          }).then(function (result) {\n            Msg.success();\n\n            _this5.resetForm();\n          }).catch(function (error) {\n            Notify.error({\n              message: error\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    remoteMethod: function (query) {\n      var _this6 = this;\n\n      if (query !== '') {\n        this.loading = true;\n        setTimeout(function () {\n          _this6.loading = false;\n          var selector = {\n            type: _this6.type\n          };\n          lookupStudent.callPromise({\n            selector: selector\n          }).then(function (result) {\n            _this6.studentIdOpts = result.filter(function (item) {\n              return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1;\n            });\n          }).catch(function (error) {\n            Notify.error({\n              message: error.reason\n            });\n          });\n        }, 200);\n      } else {\n        this.loading = true;\n        var selector = {\n          type: this.type\n        };\n        lookupStudent.callPromise({\n          selector: selector\n        }).then(function (result) {\n          _this6.studentIdOpts = result;\n          _this6.loading = false;\n        }).catch(function (err) {\n          Notify.error({\n            message: err.reason\n          });\n        });\n      }\n    },\n    handleClose: function () {\n      // this.$emit('modal-close')\n      this.$router.go(-1);\n    },\n    resetForm: function () {\n      this.$refs['form'].resetFields();\n      this.classIdOpts = [];\n    },\n    formatNumer: function (val) {\n      return numeral(val).format('0,0.00 $');\n    }\n  }\n});","map":{"version":3,"sources":["/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/RegisterInsert.vue"],"names":["_","module","link","v","Notify","Msg","wrapCurrentTime","moment","Lookup","getNextRef","insertPayementForNew","findPaymentForClass","findOnePaymentByCode","findExchanges","numeral","require","exportDefault","props","visible","type","Boolean","data","validateCode","rule","value","callback","Error","setTimeout","selector","receiptCode","callPromise","then","result","catch","error","message","loading","refNumLoading","checkRadio","typeOpts","classIdOpts","genderOpts","gender","studentIdOpts","listExpireStudent","exchangeRate","remaining","checkBaseOn","form","fee","classId","rsDate","toDate","studentId","payDate","duration","totalPay","usd","discountVal","khr","status","rules","validator","trigger","required","watch","val","mounted","getExchangeRate","getNextRefNum","methods","collectionName","opts","field","paddingType","paddingLength","paddingChar","prefix","handleTypeChange","lookupClass","getStudentData","handleBaseOnChange","console","log","length","remove","lookupStudent","handleSave","$refs","validate","valid","dob","tranDate","endPayDate","add","recieveKhr","isNaN","totalRecieve","doc","refType","parseInt","success","resetForm","remoteMethod","query","filter","item","label","toLowerCase","indexOf","reason","err","handleClose","$router","go","resetFields","formatNumer","format"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport _ from 'lodash'\nimport Notify from '/imports/client/lib/notify'\nimport Msg from '/imports/client/lib/message'\nimport wrapCurrentTime from '/imports/client/lib/wrap-current-time'\nimport moment from 'moment'\nimport Lookup from '/imports/client/lib/Lookup-Value'\nimport { getNextRef } from '/imports/utils/get-next-ref'\n// import { lookupClass, lookupStudent } from ''\n// '/imports/utils/lookup-methods'\n\nimport {\n  insertPayementForNew,\n  findPaymentForClass,\n  findOnePaymentByCode,\n} from '/imports/modules/school/api/payment/methods'\nimport { findExchanges } from '/imports/api/exchanges/methods.js'\nconst numeral = require('numeral')\nexport default {\n  // name: 'RegisterInsert',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    // Check Code\n    const validateCode = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('Code is requiered'))\n      }\n      setTimeout(() => {\n        let selector = {\n          receiptCode: value,\n        }\n        findOnePaymentByCode\n          .callPromise({ selector })\n          .then(result => {\n            if (result) {\n              callback(new Error('This code is exist'))\n            } else {\n              callback()\n            }\n          })\n          .catch(error => {\n            Notify.error({ message: error })\n          })\n      }, 1000)\n    }\n\n    return {\n      loading: false,\n      refNumLoading: 'eg. 1',\n      checkRadio: 'New',\n      typeOpts: Lookup.type,\n      classIdOpts: [],\n      genderOpts: Lookup.gender,\n      studentIdOpts: [],\n      listExpireStudent: [],\n      exchangeRate: 0,\n      remaining: 0,\n      type: '',\n      checkBaseOn: 'usd',\n      form: {\n        receiptCode: '',\n        fee: 0,\n        type: '',\n        classId: '',\n        rsDate: moment().toDate(),\n        studentId: '',\n        payDate: moment().toDate(),\n        duration: 1,\n        totalPay: 0,\n        usd: 0,\n        discountVal: 0,\n        khr: 0,\n        remaining: 0,\n        status: 'Paid',\n      },\n      rules: {\n        receiptCode: [{ validator: validateCode, trigger: 'change' }],\n        rsDate: [\n          { required: true, message: 'Date is Required', trigger: 'change' },\n        ],\n        type: [\n          { required: true, message: 'Type is Required', trigger: 'change' },\n        ],\n        classId: [\n          { required: true, message: 'Class is Required', trigger: 'change' },\n        ],\n        studentId: [\n          {\n            required: true,\n            message: 'Student ID is required',\n            trigger: 'change',\n          },\n        ],\n        fee: [\n          { required: true, message: 'Fee is Required', trigger: 'change' },\n        ],\n        payDate: [\n          { required: true, message: 'Date is Required', trigger: 'change' },\n        ],\n        duration: [\n          { required: true, message: 'Duration is required' },\n          { type: 'number', message: 'Duration must be a number' },\n        ],\n        usd: [{ required: true, message: 'Total is required' }],\n        khr: [{ required: true, message: 'Total is required' }],\n        totalPay: [{ required: true, message: 'Total must be a number' }],\n      },\n    }\n  },\n\n  watch: {\n    'form.duration'(val) {\n      this.form.totalPay = val * this.form.fee\n    },\n    'form.fee'(val) {\n      this.form.totalPay = val * this.form.duration\n    },\n  },\n  mounted() {\n    this.getExchangeRate()\n    this.getNextRefNum()\n  },\n  methods: {\n    getNextRefNum() {\n      this.refNumLoading = 'Loading....'\n      getNextRef\n        .callPromise({\n          collectionName: 'payment',\n          opts: {\n            field: 'receiptCode',\n            // selector: {},\n            paddingType: 'start',\n            paddingLength: 5,\n            paddingChar: '0',\n            prefix: '',\n          },\n        })\n        .then(result => {\n          if (result) {\n            this.form.receiptCode = result\n          }\n        })\n        .catch(error => {\n          this.refNumLoading = 'eg. 1'\n          Notify.error({ message: error })\n        })\n    },\n\n    handleTypeChange(val) {\n      if (val) {\n        this.type = val\n        let selector = {\n          type: val,\n          status: 'Active',\n        }\n        lookupClass\n          .callPromise({ selector })\n          .then(result => {\n            this.classIdOpts = result\n          })\n          .catch(error => {\n            Notify.error({ message: error })\n          })\n        this.getStudentData(val)\n      } else {\n        this.form.classId = ''\n        this.classIdOpts = []\n      }\n    },\n    handleBaseOnChange(val) {\n      console.log(val)\n    },\n    getExchangeRate() {\n      this.exchangeRate = 0\n      findExchanges\n        .callPromise({})\n        .then(result => {\n          if (result.length > 0) {\n            this.exchangeRate = result[0].khr\n          } else {\n            this.exchangeRate = 0\n          }\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    getStudentData(val) {\n      let selector = {\n        type: val,\n        remove: false,\n      }\n      lookupStudent\n        .callPromise({ selector })\n        .then(result => {\n          this.studentIdOpts = result\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n\n    handleSave() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          this.form.rsDate = wrapCurrentTime(this.form.rsDate)\n          this.form.dob = wrapCurrentTime(this.form.dob)\n          this.form.tranDate = wrapCurrentTime(moment().toDate())\n          this.form.payDate = wrapCurrentTime(this.form.payDate)\n          this.form.endPayDate = wrapCurrentTime(\n            moment(this.form.payDate).add(this.form.duration, 'months')\n          )\n          if (this.form.remaining != 0) {\n            this.form.status = 'Debt'\n          }\n          let recieveKhr = this.form.khr / this.exchangeRate\n\n          isNaN(recieveKhr) == true\n            ? (recieveKhr = 0)\n            : (recieveKhr = recieveKhr)\n\n          let totalRecieve = this.form.usd + recieveKhr + this.form.discountVal\n\n          let doc = {\n            receiptCode: this.form.receiptCode,\n            tranDate: this.form.tranDate,\n            classId: this.form.classId,\n            studentId: this.form.studentId,\n            refType: 'New',\n            payDate: this.form.payDate,\n            duration: this.form.duration,\n            endPayDate: this.form.endPayDate,\n            usd: this.form.usd,\n            discountVal: this.form.discountVal,\n            totalPay: this.form.totalPay,\n            khr: this.form.khr,\n            remaining: this.form.remaining,\n            status: this.form.status,\n            type: this.form.type,\n            fee: parseInt(this.form.fee),\n            totalRecieve: totalRecieve,\n          }\n\n          insertPayementForNew\n            .callPromise({ doc: doc })\n            .then(result => {\n              Msg.success()\n              this.resetForm()\n            })\n            .catch(error => {\n              Notify.error({ message: error })\n            })\n        } else {\n          return false\n        }\n      })\n    },\n    remoteMethod(query) {\n      if (query !== '') {\n        this.loading = true\n        setTimeout(() => {\n          this.loading = false\n          let selector = {\n            type: this.type,\n          }\n          lookupStudent\n            .callPromise({ selector })\n            .then(result => {\n              this.studentIdOpts = result.filter(item => {\n                return (\n                  item.label.toLowerCase().indexOf(query.toLowerCase()) > -1\n                )\n              })\n            })\n            .catch(error => {\n              Notify.error({ message: error.reason })\n            })\n        }, 200)\n      } else {\n        this.loading = true\n        let selector = {\n          type: this.type,\n        }\n        lookupStudent\n          .callPromise({ selector })\n          .then(result => {\n            this.studentIdOpts = result\n            this.loading = false\n          })\n          .catch(err => {\n            Notify.error({ message: err.reason })\n          })\n      }\n    },\n    handleClose() {\n      // this.$emit('modal-close')\n      this.$router.go(-1)\n    },\n    resetForm() {\n      this.$refs['form'].resetFields()\n      this.classIdOpts = []\n    },\n    formatNumer(val) {\n      return numeral(val).format('0,0.00 $')\n    },\n  },\n}\n"]},"sourceType":"script","hash":"376d23c02f75b9eb92a822a0258e53b373fcedb2"}
