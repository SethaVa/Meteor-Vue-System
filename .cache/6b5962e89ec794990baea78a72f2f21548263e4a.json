{"metadata":{},"options":{"plugins":[{"key":"/Users/rabbit/Desktop/app/bad-system/node_modules/babel-plugin-transform-vue-jsx/index.js","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/home.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/home.vue","filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/home.vue","passPerPreset":false,"envName":"development","cwd":"/Users/rabbit/Desktop/app/bad-system","root":"/Users/rabbit/Desktop/app/bad-system","generatorOpts":{"filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/home.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/home.vue"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar Notify;\nmodule.link(\"/imports/client/lib/notify\", {\n  \"default\": function (v) {\n    Notify = v;\n  }\n}, 0);\n\nvar _;\n\nmodule.link(\"lodash\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 1);\nvar compareDate;\nmodule.link(\"/imports/modules/school/util/compare-date\", {\n  \"default\": function (v) {\n    compareDate = v;\n  }\n}, 2);\nvar json2csv;\nmodule.link(\"json2csv\", {\n  \"default\": function (v) {\n    json2csv = v;\n  }\n}, 3);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 4);\nvar mapState;\nmodule.link(\"vuex\", {\n  mapState: function (v) {\n    mapState = v;\n  }\n}, 5);\nvar VueJsonPretty;\nmodule.link(\"vue-json-pretty\", {\n  \"default\": function (v) {\n    VueJsonPretty = v;\n  }\n}, 6);\nvar Avatar;\nmodule.link(\"vue-avatar\", {\n  \"default\": function (v) {\n    Avatar = v;\n  }\n}, 7);\nvar findStudentByType, countStudents, countStaff, countRoom, countClass, countSubject, countPayment;\nmodule.link(\"/imports/modules/school/api/dashbord/dashbord\", {\n  findStudentByType: function (v) {\n    findStudentByType = v;\n  },\n  countStudents: function (v) {\n    countStudents = v;\n  },\n  countStaff: function (v) {\n    countStaff = v;\n  },\n  countRoom: function (v) {\n    countRoom = v;\n  },\n  countClass: function (v) {\n    countClass = v;\n  },\n  countSubject: function (v) {\n    countSubject = v;\n  },\n  countPayment: function (v) {\n    countPayment = v;\n  }\n}, 8);\nmodule.exportDefault({\n  name: 'Home',\n  components: {\n    VueJsonPretty: VueJsonPretty,\n    Avatar: Avatar\n  },\n  props: {\n    doc: {\n      type: Object,\n      \"default\": null\n    }\n  },\n  data: function () {\n    // const item = {\n    //   date: '2016-05-02',\n    //   name: 'Tom',\n    //   address: 'No. 189, Grove St, Los Angeles',\n    // }\n    return {\n      userDoc: {},\n      chartData: '',\n      chartSettings: '',\n      chartSettings1: '',\n      name: '',\n      totalStudent: 0,\n      totalStaff: 0,\n      totalRoom: 0,\n      totalSubject: 0,\n      totalClass: 0,\n      totalPayment: 0,\n      rowData: [],\n      chartStudentData: [],\n      chartStudentSettings: {} // tableData: Array(20).fill(item),\n\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, mapState({\n    currentUser: function (state) {\n      return state.currentUser; // object\n    }\n  }), {\n    userFullName: function () {\n      return this.$store.getters['userFullName'];\n    },\n    userIsInRole: function () {\n      return this.$store.getters['userIsInRole'](['user']); // (['admin', 'super'])\n      // return this.$store.getters['userIsInRole'](['pos'])\n    }\n  }),\n  mounted: function () {\n    this.getStudentData();\n    this.getStaffAmount();\n    this.getRoomAmount();\n    this.getSubjectAmount();\n    this.getClassAmount();\n    this.getStudentShowChart();\n    this.getPayment(); // console.log(moment().toDate())\n    // check student on time to pay\n\n    compareDate(); // chart\n    // this.chartData = {\n    //   columns: ['Total', 'Gender'],\n    //   rows: [\n    //     {\n    //       Total: 200,\n    //       Gender: 'Male',\n    //     },\n    //     {\n    //       Total: 150,\n    //       Gender: 'Female',\n    //     },\n    //   ],\n    // }\n    // this.chartSettings = {\n    //   dimension: 'Gender',\n    //   metrics: 'Total',\n    //   // dataType: 'KMB',\n    //   selectedMode: 'single',\n    //   hoverAnimation: false,\n    //   radius: 100,\n    //   offsetY: 200,\n    // }\n    // this.chartSettings1 = {\n    //   metrics: ['Total', 'Gender'],\n    //   dimension: ['Gender'],\n    // }\n    //=====================================\n    // this.chartStudentData = {\n    //   columns: ['date', 'PartTime', 'PFemale', 'FullTime', 'FFemale'],\n    //   rows: rowData,\n    // }\n    // this.chartStudentSettings = {\n    //   axisSite: { right: ['FullTime'] },\n    //   yAxisType: ['normal'],\n    //   yAxisName: ['rate'],\n    // }\n  },\n  methods: {\n    getStudentData: function () {\n      var _this = this;\n\n      countStudents.callPromise({}).then(function (result) {\n        _this.totalStudent = result;\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    // Staff\n    getStaffAmount: function () {\n      var _this2 = this;\n\n      countStaff.callPromise({}).then(function (result) {\n        _this2.totalStaff = result;\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    // Subject\n    getSubjectAmount: function () {\n      var _this3 = this;\n\n      countSubject.callPromise({}).then(function (result) {\n        _this3.totalSubject = result;\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    // Room\n    getRoomAmount: function () {\n      var _this4 = this;\n\n      countRoom.callPromise({}).then(function (result) {\n        _this4.totalRoom = result;\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    // Room\n    getClassAmount: function () {\n      var _this5 = this;\n\n      var selector = {\n        status: 'Active'\n      };\n      countClass.callPromise({\n        selector: selector\n      }).then(function (result) {\n        _this5.totalClass = result;\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    // Room\n    getPayment: function () {\n      var _this6 = this;\n\n      var selector = {\n        tranDate: {\n          $gte: moment().startOf('day').toDate(),\n          $lt: moment().endOf('day').toDate()\n        }\n      };\n      countPayment.callPromise({\n        selector: selector\n      }).then(function (result) {\n        _this6.totalPayment = result;\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    // Student Show in chart\n    getStudentShowChart: function () {\n      var _this7 = this;\n\n      findStudentByType.callPromise({}).then(function (result) {\n        _.forEach(result, function (o) {\n          _this7.rowData.push({\n            date: o._id,\n            PartTime: o.totalPartTime,\n            PFemale: o.totalPFemale,\n            FullTime: o.totalFullTime,\n            FFemale: o.totalFFemale\n          });\n\n          _this7.chartStudentData = {\n            columns: ['date', 'PartTime', 'PFemale', 'FullTime', 'FFemale'],\n            rows: _this7.rowData\n          };\n          _this7.chartStudentSettings = {\n            // axisSite: { right: ['FullTime'] },\n            // yAxisType: ['normal'],\n            // yAxisName: ['rate'],\n            labelMap: {\n              ParTime: 'Total PartTime',\n              PFemale: 'Female',\n              FullTime: 'Total FullTime',\n              FFemale: 'Female FullTime'\n            }\n          };\n        });\n      }).catch(function (error) {\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    handleExport: function () {\n      var Json2csvParser = require('json2csv').Parser;\n\n      try {\n        var fields = ['car', 'price', 'color'];\n        var myCars = [{\n          car: 'Audi',\n          price: 40000,\n          color: 'blue'\n        }, {\n          car: 'BMW',\n          price: 35000,\n          color: 'black'\n        }, {\n          car: 'Porsche',\n          price: 60000,\n          color: 'green'\n        }]; // const json2csvParser = new Json2csvParser({ fields })\n        // const csv = json2csvParser.parse(myCars)\n\n        var result = json2csv({\n          data: myCars,\n          fields: fields\n        });\n        var csvContent = \"data:text/csvcharset=GBK,\\uFEFF\" + result;\n        var encodedUri = encodeURI(csvContent);\n        var link = document.createElement('a');\n        link.setAttribute('href', encodedUri);\n        link.setAttribute('download', \"test.csv\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link); // console.log(csv)\n\n        Notify.success({\n          message: 'Success'\n        });\n      } catch (error) {\n        Notify.error({\n          message: error\n        });\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/home.vue"],"names":["Notify","module","link","v","_","compareDate","json2csv","moment","mapState","VueJsonPretty","Avatar","findStudentByType","countStudents","countStaff","countRoom","countClass","countSubject","countPayment","exportDefault","name","components","props","doc","type","Object","data","userDoc","chartData","chartSettings","chartSettings1","totalStudent","totalStaff","totalRoom","totalSubject","totalClass","totalPayment","rowData","chartStudentData","chartStudentSettings","computed","currentUser","state","userFullName","$store","getters","userIsInRole","mounted","getStudentData","getStaffAmount","getRoomAmount","getSubjectAmount","getClassAmount","getStudentShowChart","getPayment","methods","callPromise","then","result","catch","error","message","selector","status","tranDate","$gte","startOf","toDate","$lt","endOf","forEach","o","push","date","_id","PartTime","totalPartTime","PFemale","totalPFemale","FullTime","totalFullTime","FFemale","totalFFemale","columns","rows","labelMap","ParTime","handleExport","Json2csvParser","require","Parser","fields","myCars","car","price","color","csvContent","encodedUri","encodeURI","document","createElement","setAttribute","body","appendChild","click","removeChild","success"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Notify from '/imports/client/lib/notify'\nimport _ from 'lodash'\nimport compareDate from '/imports/modules/school/util/compare-date'\nimport json2csv from 'json2csv'\nimport moment from 'moment'\nimport { mapState } from 'vuex'\n// Json Pretty\nimport VueJsonPretty from 'vue-json-pretty'\nimport Avatar from 'vue-avatar'\n//==================================================\n// import { countStudents } from '/imports/modules/school/api/students/methods'\n// import { countStaff } from '/imports/modules/school/api/staffs/methods'\n// import { countRoom } from '/imports/modules/school/api/rooms/methods'\n// import { countSubject } from '/imports/modules/school/api/subject/methods'\n// import { countClass } from '/imports/modules/school/api/class-study/methods'\nimport {\n  findStudentByType,\n  countStudents,\n  countStaff,\n  countRoom,\n  countClass,\n  countSubject,\n  countPayment,\n} from '/imports/modules/school/api/dashbord/dashbord'\n\n// var rowData = []\n// for (let i = 1; i < 500; i++) {\n//   rowData.push({\n//     date: '01/0' + i + '/2018',\n//     PartTime: 152 + i,\n//     PFemale: 1523 + i,\n//     FullTime: 0.12 + i,\n//     FFemale: 100 + i,\n//   })\n// }\n\nexport default {\n  name: 'Home',\n  components: {\n    VueJsonPretty,\n    Avatar,\n  },\n  props: {\n    doc: {\n      type: Object,\n      default: null,\n    },\n  },\n  data() {\n    // const item = {\n    //   date: '2016-05-02',\n    //   name: 'Tom',\n    //   address: 'No. 189, Grove St, Los Angeles',\n    // }\n    return {\n      userDoc: {},\n      chartData: '',\n      chartSettings: '',\n      chartSettings1: '',\n      name: '',\n      totalStudent: 0,\n      totalStaff: 0,\n      totalRoom: 0,\n      totalSubject: 0,\n      totalClass: 0,\n      totalPayment: 0,\n      rowData: [],\n      chartStudentData: [],\n      chartStudentSettings: {},\n      // tableData: Array(20).fill(item),\n    }\n  },\n  computed: {\n    ...mapState({\n      currentUser(state) {\n        return state.currentUser // object\n      },\n    }),\n    userFullName() {\n      return this.$store.getters['userFullName']\n    },\n    userIsInRole() {\n      return this.$store.getters['userIsInRole'](['user'])\n      // (['admin', 'super'])\n      // return this.$store.getters['userIsInRole'](['pos'])\n    },\n  },\n  mounted() {\n    this.getStudentData()\n    this.getStaffAmount()\n    this.getRoomAmount()\n    this.getSubjectAmount()\n    this.getClassAmount()\n    this.getStudentShowChart()\n    this.getPayment()\n    // console.log(moment().toDate())\n\n    // check student on time to pay\n    compareDate()\n\n    // chart\n    // this.chartData = {\n    //   columns: ['Total', 'Gender'],\n    //   rows: [\n    //     {\n    //       Total: 200,\n    //       Gender: 'Male',\n    //     },\n    //     {\n    //       Total: 150,\n    //       Gender: 'Female',\n    //     },\n    //   ],\n    // }\n    // this.chartSettings = {\n    //   dimension: 'Gender',\n    //   metrics: 'Total',\n    //   // dataType: 'KMB',\n    //   selectedMode: 'single',\n    //   hoverAnimation: false,\n    //   radius: 100,\n    //   offsetY: 200,\n    // }\n    // this.chartSettings1 = {\n    //   metrics: ['Total', 'Gender'],\n    //   dimension: ['Gender'],\n    // }\n    //=====================================\n    // this.chartStudentData = {\n    //   columns: ['date', 'PartTime', 'PFemale', 'FullTime', 'FFemale'],\n    //   rows: rowData,\n    // }\n\n    // this.chartStudentSettings = {\n    //   axisSite: { right: ['FullTime'] },\n    //   yAxisType: ['normal'],\n    //   yAxisName: ['rate'],\n    // }\n  },\n  methods: {\n    getStudentData() {\n      countStudents\n        .callPromise({})\n        .then(result => {\n          this.totalStudent = result\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    // Staff\n    getStaffAmount() {\n      countStaff\n        .callPromise({})\n        .then(result => {\n          this.totalStaff = result\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    // Subject\n    getSubjectAmount() {\n      countSubject\n        .callPromise({})\n        .then(result => {\n          this.totalSubject = result\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    // Room\n    getRoomAmount() {\n      countRoom\n        .callPromise({})\n        .then(result => {\n          this.totalRoom = result\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    // Room\n    getClassAmount() {\n      let selector = {\n        status: 'Active',\n      }\n      countClass\n        .callPromise({ selector })\n        .then(result => {\n          this.totalClass = result\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    // Room\n    getPayment() {\n      let selector = {\n        tranDate: {\n          $gte: moment()\n            .startOf('day')\n            .toDate(),\n          $lt: moment()\n            .endOf('day')\n            .toDate(),\n        },\n      }\n      countPayment\n        .callPromise({ selector })\n        .then(result => {\n          this.totalPayment = result\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    // Student Show in chart\n    getStudentShowChart() {\n      findStudentByType\n        .callPromise({})\n        .then(result => {\n          _.forEach(result, o => {\n            this.rowData.push({\n              date: o._id,\n              PartTime: o.totalPartTime,\n              PFemale: o.totalPFemale,\n              FullTime: o.totalFullTime,\n              FFemale: o.totalFFemale,\n            })\n            this.chartStudentData = {\n              columns: ['date', 'PartTime', 'PFemale', 'FullTime', 'FFemale'],\n              rows: this.rowData,\n            }\n\n            this.chartStudentSettings = {\n              // axisSite: { right: ['FullTime'] },\n              // yAxisType: ['normal'],\n              // yAxisName: ['rate'],\n              labelMap: {\n                ParTime: 'Total PartTime',\n                PFemale: 'Female',\n                FullTime: 'Total FullTime',\n                FFemale: 'Female FullTime',\n              },\n            }\n          })\n        })\n        .catch(error => {\n          Notify.error({ message: error })\n        })\n    },\n    handleExport() {\n      const Json2csvParser = require('json2csv').Parser\n      try {\n        const fields = ['car', 'price', 'color']\n        const myCars = [\n          {\n            car: 'Audi',\n            price: 40000,\n            color: 'blue',\n          },\n          {\n            car: 'BMW',\n            price: 35000,\n            color: 'black',\n          },\n          {\n            car: 'Porsche',\n            price: 60000,\n            color: 'green',\n          },\n        ]\n\n        // const json2csvParser = new Json2csvParser({ fields })\n        // const csv = json2csvParser.parse(myCars)\n        let result = json2csv({\n          data: myCars,\n          fields: fields,\n        })\n        let csvContent = 'data:text/csvcharset=GBK,\\uFEFF' + result\n        let encodedUri = encodeURI(csvContent)\n        let link = document.createElement('a')\n        link.setAttribute('href', encodedUri)\n        link.setAttribute('download', `test.csv`)\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n        // console.log(csv)\n        Notify.success({ message: 'Success' })\n      } catch (error) {\n        Notify.error({ message: error })\n      }\n    },\n  },\n}\n"]},"sourceType":"script","hash":"6b5962e89ec794990baea78a72f2f21548263e4a"}
