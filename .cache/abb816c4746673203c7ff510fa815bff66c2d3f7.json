{"metadata":{},"options":{"plugins":[{"key":"/Users/rabbit/Desktop/app/bad-system/node_modules/babel-plugin-transform-vue-jsx/index.js","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/StaffForm.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/StaffForm.vue","filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/StaffForm.vue","passPerPreset":false,"envName":"development","cwd":"/Users/rabbit/Desktop/app/bad-system","root":"/Users/rabbit/Desktop/app/bad-system","generatorOpts":{"filename":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/StaffForm.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/StaffForm.vue"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar Msg;\nmodule.link(\"/imports/client/lib/message\", {\n  \"default\": function (v) {\n    Msg = v;\n  }\n}, 0);\nvar Notify;\nmodule.link(\"/imports/client/lib/notify\", {\n  \"default\": function (v) {\n    Notify = v;\n  }\n}, 1);\nvar wrapCurrentTime;\nmodule.link(\"/imports/client/lib/wrap-current-time\", {\n  \"default\": function (v) {\n    wrapCurrentTime = v;\n  }\n}, 2);\nvar mapState;\nmodule.link(\"vuex\", {\n  mapState: function (v) {\n    mapState = v;\n  }\n}, 3);\nvar insertStaff, updateStaff, findOneStaff;\nmodule.link(\"/imports/modules/school/api/staffs/methods\", {\n  insertStaff: function (v) {\n    insertStaff = v;\n  },\n  updateStaff: function (v) {\n    updateStaff = v;\n  },\n  findOneStaff: function (v) {\n    findOneStaff = v;\n  }\n}, 4);\nvar positionOpts;\nmodule.link(\"/imports/modules/school/api/positions/methods\", {\n  positionOpts: function (v) {\n    positionOpts = v;\n  }\n}, 5);\nvar Lookup;\nmodule.link(\"../lib/Lookup-Value.js\", {\n  \"default\": function (v) {\n    Lookup = v;\n  }\n}, 6);\nmodule.exportDefault({\n  name: 'EmployeeInsert',\n  props: {\n    visible: {\n      type: Boolean,\n      \"default\": false\n    },\n    updateId: {\n      type: String,\n      \"default\": null\n    }\n  },\n  data: function () {\n    var checkBaseSalary = function (rule, value, callback) {\n      if (value === '') {\n        callback(new Error(\"Salary can't empty !\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      // loaing\n      loading: {\n        form: false,\n        position: 'Select'\n      },\n      // Opts\n      genderOpts: Lookup.gender,\n      positionIdOpts: [],\n      // Form\n      form: {\n        name: '',\n        gender: '',\n        dob: '',\n        email: '',\n        tel: '',\n        positionId: '',\n        baseSalary: 0\n      },\n      // Rules\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please Input Name',\n          trigger: 'blur'\n        }],\n        positionId: [{\n          required: true,\n          message: 'Please select Position',\n          trigger: 'change'\n        }],\n        gender: [{\n          required: true\n        }],\n        dob: [{\n          required: true\n        }],\n        balseSalary: [{\n          validator: checkBaseSalary,\n          trigger: 'change'\n        }],\n        tel: [{\n          required: true\n        }]\n      }\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, mapState({\n    currentBranchId: function (state) {\n      return state.app && state.app.currentBranch._id;\n    }\n  })),\n  created: function () {\n    this._getPositionOpts();\n  },\n  mounted: function () {\n    if (this.updateId) this._getData();\n  },\n  methods: {\n    _getData: function () {\n      var _this = this;\n\n      this.loading.form = true;\n      findOneStaff.callPromise({\n        selector: {\n          _id: this.updateId\n        }\n      }).then(function (result) {\n        _this.loading.form = false;\n        _this.form = result;\n      }).catch(function (err) {\n        _this.loading.form = false;\n        Notify.error({\n          message: err\n        });\n        console.log(err);\n      });\n    },\n    // Get position opts\n    _getPositionOpts: function () {\n      var _this2 = this;\n\n      this.loading.position = 'Loading...';\n      positionOpts.callPromise({}).then(function (result) {\n        _this2.positionIdOpts = result;\n        _this2.loading.position = 'Select';\n      }).catch(function (error) {\n        _this2.loading.position = 'Select';\n        Notify.error({\n          message: error\n        });\n      });\n    },\n    // Submit form\n    _submitForm: function (type) {\n      var _this3 = this;\n\n      this.loading.form = true;\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          // Pick data\n          _this3.form.dob = wrapCurrentTime(_this3.form.dob);\n          _this3.form.branchId = _this3.currentBranchId;\n\n          if (_this3.updateId) {\n            // update\n            updateStaff.callPromise({\n              doc: _this3.form\n            }).then(function (result) {\n              if (result) {\n                _this3.loading.form = false;\n                Msg.success();\n                type == 'new' ? _this3.handelresetForm() : _this3.handleClose();\n              }\n            }).catch(function (err) {\n              _this3.loading.form = false;\n              Notify.error({\n                message: err\n              });\n            });\n          } else {\n            // insert\n            insertStaff.callPromise({\n              doc: _this3.form\n            }).then(function (result) {\n              if (result) {\n                _this3.loading.form = false;\n                Msg.success();\n                type == 'new' ? _this3.handelresetForm() : _this3.handleClose();\n              }\n            }).catch(function (err) {\n              _this3.loading.form = false;\n              Notify.error({\n                message: err\n              });\n            });\n          }\n        } else {\n          _this3.loading.form = false;\n          return false;\n        }\n      });\n    },\n    // Close modal\n    handleClose: function () {\n      this.$emit('modal-close');\n    },\n    // Reset form\n    handelresetForm: function () {\n      this.$refs['form'].resetFields();\n    }\n  }\n});","map":{"version":3,"sources":["/Users/rabbit/Desktop/app/bad-system/imports/modules/school/client/pages/StaffForm.vue"],"names":["Msg","module","link","v","Notify","wrapCurrentTime","mapState","insertStaff","updateStaff","findOneStaff","positionOpts","Lookup","exportDefault","name","props","visible","type","Boolean","updateId","String","data","checkBaseSalary","rule","value","callback","Error","loading","form","position","genderOpts","gender","positionIdOpts","dob","email","tel","positionId","baseSalary","rules","required","message","trigger","balseSalary","validator","computed","currentBranchId","state","app","currentBranch","_id","created","_getPositionOpts","mounted","_getData","methods","callPromise","selector","then","result","catch","err","error","console","log","_submitForm","$refs","validate","valid","branchId","doc","success","handelresetForm","handleClose","$emit","resetFields"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Msg from '/imports/client/lib/message'\nimport Notify from '/imports/client/lib/notify'\nimport wrapCurrentTime from '/imports/client/lib/wrap-current-time'\n\nimport { mapState } from 'vuex'\n\nimport {\n  insertStaff,\n  updateStaff,\n  findOneStaff,\n} from '/imports/modules/school/api/staffs/methods'\nimport { positionOpts } from '/imports/modules/school/api/positions/methods'\nimport Lookup from '../lib/Lookup-Value.js'\nexport default {\n  name: 'EmployeeInsert',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    updateId: {\n      type: String,\n      default: null,\n    },\n  },\n  data() {\n    var checkBaseSalary = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(\"Salary can't empty !\"))\n      } else {\n        callback()\n      }\n    }\n    return {\n      // loaing\n      loading: {\n        form: false,\n        position: 'Select',\n      },\n      // Opts\n      genderOpts: Lookup.gender,\n      positionIdOpts: [],\n\n      // Form\n      form: {\n        name: '',\n        gender: '',\n        dob: '',\n        email: '',\n        tel: '',\n        positionId: '',\n        baseSalary: 0,\n      },\n      // Rules\n      rules: {\n        name: [\n          {\n            required: true,\n            message: 'Please Input Name',\n            trigger: 'blur',\n          },\n        ],\n        positionId: [\n          {\n            required: true,\n            message: 'Please select Position',\n            trigger: 'change',\n          },\n        ],\n        gender: [{ required: true }],\n        dob: [{ required: true }],\n        balseSalary: [{ validator: checkBaseSalary, trigger: 'change' }],\n        tel: [{ required: true }],\n      },\n    }\n  },\n  computed: {\n    ...mapState({\n      currentBranchId(state) {\n        return state.app && state.app.currentBranch._id\n      },\n    }),\n  },\n  created() {\n    this._getPositionOpts()\n  },\n  mounted() {\n    if (this.updateId) this._getData()\n  },\n  methods: {\n    _getData() {\n      this.loading.form = true\n      findOneStaff\n        .callPromise({ selector: { _id: this.updateId } })\n        .then(result => {\n          this.loading.form = false\n          this.form = result\n        })\n        .catch(err => {\n          this.loading.form = false\n          Notify.error({ message: err })\n          console.log(err)\n        })\n    },\n    // Get position opts\n    _getPositionOpts() {\n      this.loading.position = 'Loading...'\n      positionOpts\n        .callPromise({})\n        .then(result => {\n          this.positionIdOpts = result\n          this.loading.position = 'Select'\n        })\n        .catch(error => {\n          this.loading.position = 'Select'\n          Notify.error({ message: error })\n        })\n    },\n    // Submit form\n    _submitForm(type) {\n      this.loading.form = true\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          // Pick data\n          this.form.dob = wrapCurrentTime(this.form.dob)\n          this.form.branchId = this.currentBranchId\n          if (this.updateId) {\n            // update\n            updateStaff\n              .callPromise({ doc: this.form })\n              .then(result => {\n                if (result) {\n                  this.loading.form = false\n                  Msg.success()\n                  type == 'new' ? this.handelresetForm() : this.handleClose()\n                }\n              })\n              .catch(err => {\n                this.loading.form = false\n                Notify.error({ message: err })\n              })\n          } else {\n            // insert\n            insertStaff\n              .callPromise({ doc: this.form })\n              .then(result => {\n                if (result) {\n                  this.loading.form = false\n                  Msg.success()\n                  type == 'new' ? this.handelresetForm() : this.handleClose()\n                }\n              })\n              .catch(err => {\n                this.loading.form = false\n                Notify.error({ message: err })\n              })\n          }\n        } else {\n          this.loading.form = false\n          return false\n        }\n      })\n    },\n    // Close modal\n    handleClose() {\n      this.$emit('modal-close')\n    },\n    // Reset form\n    handelresetForm() {\n      this.$refs['form'].resetFields()\n    },\n  },\n}\n"]},"sourceType":"script","hash":"abb816c4746673203c7ff510fa815bff66c2d3f7"}
