{"metadata":{},"options":{"plugins":[{"key":"/Users/rabbit/Desktop/app/bad-system/node_modules/babel-plugin-transform-vue-jsx/index.js","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/client/pages/ExchangeForm.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/client/pages/ExchangeForm.vue","filename":"/Users/rabbit/Desktop/app/bad-system/imports/client/pages/ExchangeForm.vue","passPerPreset":false,"envName":"development","cwd":"/Users/rabbit/Desktop/app/bad-system","root":"/Users/rabbit/Desktop/app/bad-system","generatorOpts":{"filename":"/Users/rabbit/Desktop/app/bad-system/imports/client/pages/ExchangeForm.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/rabbit/Desktop/app/bad-system/imports/client/pages/ExchangeForm.vue"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 0);\nvar Msg;\nmodule.link(\"/imports/client/lib/message\", {\n  \"default\": function (v) {\n    Msg = v;\n  }\n}, 1);\nvar Notify;\nmodule.link(\"/imports/client/lib/notify\", {\n  \"default\": function (v) {\n    Notify = v;\n  }\n}, 2);\nvar wrapCurrentTime;\nmodule.link(\"/imports/client/lib/wrap-current-time\", {\n  \"default\": function (v) {\n    wrapCurrentTime = v;\n  }\n}, 3);\nvar insertExchange, updateExchange;\nmodule.link(\"/imports/api/exchanges/methods.js\", {\n  insertExchange: function (v) {\n    insertExchange = v;\n  },\n  updateExchange: function (v) {\n    updateExchange = v;\n  }\n}, 4);\nvar mapState;\nmodule.link(\"vuex\", {\n  mapState: function (v) {\n    mapState = v;\n  }\n}, 5);\nmodule.exportDefault({\n  name: 'ExchangeForm',\n  props: {\n    formType: {\n      type: String,\n      \"default\": 'New'\n    },\n    updateDoc: {\n      type: Object,\n      \"default\": null\n    }\n  },\n  data: function () {\n    return {\n      loading: false,\n      form: {\n        base: 'USD',\n        exDate: moment().toDate(),\n        usd: 1,\n        khr: 0,\n        thb: 0\n      },\n      rules: {\n        exDate: [{\n          required: true\n        }],\n        usd: [{\n          required: true\n        }],\n        khr: [{\n          required: true\n        }],\n        thb: [{\n          required: true\n        }]\n      }\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, mapState({\n    decimalNumber: function (state) {\n      var company = state.app && state.app.company;\n      return company && company.setting.decimalNumber;\n    }\n  }), {\n    dateFormat: function () {\n      return this.$store.getters['app/dateFormat'];\n    },\n    formSize: function () {\n      return this.$store.getters['app/formInterface'];\n    }\n  }),\n  watch: {\n    updateDoc: function (val) {\n      if (val) {\n        this.form = val;\n      } else {\n        this.form = {\n          base: 'USD',\n          exDate: moment().toDate(),\n          usd: 1,\n          khr: 0,\n          thb: 0\n        };\n      }\n    }\n  },\n  mounted: function () {},\n  methods: {\n    submitForm: function () {\n      var _this = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          _this.loading = true; // Pick doc\n\n          _this.form.exDate = wrapCurrentTime(_this.form.exDate);\n\n          if (_this.formType === 'New') {\n            insertExchange.callPromise(_this.form).then(function (result) {\n              if (result) {\n                _this.loading = false;\n                Msg.success();\n\n                _this.handleCancel();\n              }\n            }).catch(function (error) {\n              Notify.error({\n                message: error\n              });\n            });\n          } else if (_this.formType === 'Update') {\n            updateExchange.callPromise(_this.form).then(function (result) {\n              if (result) {\n                _this.loading = false;\n                Msg.success();\n\n                _this.handleCancel();\n              }\n            }).catch(function (error) {\n              Notify.error({\n                message: error\n              });\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm: function () {\n      this.$refs['form'].resetFields();\n    },\n    handleCancel: function () {\n      this.resetForm();\n      this.$emit('form-change');\n    }\n  }\n});","map":{"version":3,"sources":["/Users/rabbit/Desktop/app/bad-system/imports/client/pages/ExchangeForm.vue"],"names":["moment","module","link","v","Msg","Notify","wrapCurrentTime","insertExchange","updateExchange","mapState","exportDefault","name","props","formType","type","String","updateDoc","Object","data","loading","form","base","exDate","toDate","usd","khr","thb","rules","required","computed","decimalNumber","state","company","app","setting","dateFormat","$store","getters","formSize","watch","val","mounted","methods","submitForm","$refs","validate","valid","callPromise","then","result","success","handleCancel","catch","error","message","resetForm","resetFields","$emit"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\n\nimport Msg from '/imports/client/lib/message'\nimport Notify from '/imports/client/lib/notify'\nimport wrapCurrentTime from '/imports/client/lib/wrap-current-time'\n\nimport {\n  insertExchange,\n  updateExchange,\n} from '/imports/api/exchanges/methods.js'\n\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'ExchangeForm',\n  props: {\n    formType: {\n      type: String,\n      default: 'New',\n    },\n    updateDoc: {\n      type: Object,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n        base: 'USD',\n        exDate: moment().toDate(),\n        usd: 1,\n        khr: 0,\n        thb: 0,\n      },\n      rules: {\n        exDate: [{ required: true }],\n        usd: [{ required: true }],\n        khr: [{ required: true }],\n        thb: [{ required: true }],\n      },\n    }\n  },\n  computed: {\n    ...mapState({\n      decimalNumber(state) {\n        let company = state.app && state.app.company\n        return company && company.setting.decimalNumber\n      },\n    }),\n    dateFormat() {\n      return this.$store.getters['app/dateFormat']\n    },\n    formSize() {\n      return this.$store.getters['app/formInterface']\n    },\n  },\n  watch: {\n    updateDoc(val) {\n      if (val) {\n        this.form = val\n      } else {\n        this.form = {\n          base: 'USD',\n          exDate: moment().toDate(),\n          usd: 1,\n          khr: 0,\n          thb: 0,\n        }\n      }\n    },\n  },\n  mounted() {},\n  methods: {\n    submitForm() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          this.loading = true\n\n          // Pick doc\n          this.form.exDate = wrapCurrentTime(this.form.exDate)\n          if (this.formType === 'New') {\n            insertExchange\n              .callPromise(this.form)\n              .then(result => {\n                if (result) {\n                  this.loading = false\n                  Msg.success()\n                  this.handleCancel()\n                }\n              })\n              .catch(error => {\n                Notify.error({ message: error })\n              })\n          } else if (this.formType === 'Update') {\n            updateExchange\n              .callPromise(this.form)\n              .then(result => {\n                if (result) {\n                  this.loading = false\n                  Msg.success()\n                  this.handleCancel()\n                }\n              })\n              .catch(error => {\n                Notify.error({ message: error })\n              })\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    resetForm() {\n      this.$refs['form'].resetFields()\n    },\n    handleCancel() {\n      this.resetForm()\n      this.$emit('form-change')\n    },\n  },\n}\n"]},"sourceType":"script","hash":"7359f2a319a7ad04c4b23dc32edaf3ed454ada2e"}
